<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_dev_manager_8cpp" kind="file" language="C++">
    <compoundname>DevManager.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="_dev_manager_8h" local="yes">DevManager.h</includes>
    <includes local="no">devload.h</includes>
    <incdepgraph>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>atlframe.h</label>
      </node>
      <node id="4">
        <label>atlapp.h</label>
      </node>
      <node id="7">
        <label>Windows.h</label>
      </node>
      <node id="11">
        <label>atlwin.h</label>
      </node>
      <node id="8">
        <label>shlwapi.h</label>
      </node>
      <node id="2">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>resource.h</label>
        <link refid="upkit_2resource_8h"/>
      </node>
      <node id="23">
        <label>ddkreg.h</label>
      </node>
      <node id="22">
        <label>DevManager.h</label>
        <link refid="_dev_manager_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="10">
        <label>atlmisc.h</label>
      </node>
      <node id="24">
        <label>devload.h</label>
      </node>
      <node id="5">
        <label>atlimage.h</label>
      </node>
      <node id="9">
        <label>atlresCE.h</label>
      </node>
      <node id="1">
        <label>C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/upkit/DevManager.cpp</label>
        <link refid="_dev_manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>atlbase.h</label>
      </node>
      <node id="6">
        <label>atltime.h</label>
      </node>
      <node id="14">
        <label>atldlgs.h</label>
      </node>
      <node id="15">
        <label>aygshell.h</label>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>atlctrls.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dev_manager_8h" kindref="compound">DevManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;devload.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">DevManager::DevManager()</highlight></codeline>
<codeline lineno="7"><highlight class="normal">:<sp/>_active(-7)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_dev_manager_1a8f6ed839dffa964799b1c975012b83a2" refkind="member"><highlight class="normal"><ref refid="class_dev_manager" kindref="compound">DevManager</ref><sp/>*<sp/><ref refid="class_dev_manager_1a8f6ed839dffa964799b1c975012b83a2" kindref="member">DevManager::specific</ref>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager" kindref="compound">DevManager</ref><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_dev_manager_1ab88d097de123fa29e1fe461487fde8ac" refkind="member"><highlight class="normal"><ref refid="namespacestd_1a18cacf074ba3b0545e391cd7ef0c4334" kindref="member">std::tstring</ref><sp/><ref refid="class_dev_manager_1ab88d097de123fa29e1fe461487fde8ac" kindref="member">DevManager::GetDevRegPath</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a18cacf074ba3b0545e391cd7ef0c4334" kindref="member">std::tstring</ref>(DEVLOAD_BUILT_IN_KEY)<sp/>+<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="stdafx_8h_1abcb3b88a2ffb4f61a9248acb1ef5a1f6" kindref="member">DEV_NAME</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_dev_manager_1a2c86c22e91e14387c113764bc15baf34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1a2c86c22e91e14387c113764bc15baf34" kindref="member">DevManager::RefreshInfo</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>subReg[200];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>szSubReg<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/>subKey;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/>devReg[200];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>tpDevReg,<sp/>szDevReg<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HANDLE);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacestd_1a18cacf074ba3b0545e391cd7ef0c4334" kindref="member">std::tstring</ref><sp/>devRegTemplate(<ref refid="class_dev_manager_1ab88d097de123fa29e1fe461487fde8ac" kindref="member">GetDevRegPath</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacestd_1a18cacf074ba3b0545e391cd7ef0c4334" kindref="member">std::tstring</ref><sp/>devRegTmp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/>activeKey;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>_dev_array.clear();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ERROR_SUCCESS<sp/>!=<sp/>RegOpenKeyEx(HKEY_LOCAL_MACHINE,<sp/>DEVLOAD_ACTIVE_KEY,<sp/>0,<sp/>0,<sp/>&amp;activeKey))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(TRUE)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szDevReg<sp/>=<sp/>szSubReg<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ERROR_SUCCESS<sp/>!=<sp/>RegEnumKeyEx(activeKey,<sp/>index,<sp/>&amp;subReg[0],<sp/>&amp;szSubReg,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devRegTmp<sp/>=<sp/>DEVLOAD_ACTIVE_KEY;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devRegTmp<sp/>+=<sp/>_T(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devRegTmp<sp/>+=<sp/>&amp;subReg[0];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ERROR_SUCCESS<sp/>!=<sp/>RegOpenKeyEx(HKEY_LOCAL_MACHINE,<sp/>&amp;devRegTmp[0],<sp/>0,<sp/>0,<sp/>&amp;subKey))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ERROR_SUCCESS<sp/>!=<sp/>RegQueryValueEx(subKey,<sp/>DEVLOAD_DEVKEY_VALNAME,<sp/>NULL,<sp/>&amp;tpDevReg,<sp/>(LPBYTE)&amp;devReg[0],<sp/>&amp;szDevReg))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devRegTmp<sp/>=<sp/>&amp;devReg[0];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(devRegTemplate<sp/>==<sp/>devRegTmp)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>val_type,<sp/>val_size;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_dev_info" kindref="compound">DevInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="struct_dev_info_1aa9978fa7d1b156241ba1ab30135258f5" kindref="member">reg_path</ref><sp/>=<sp/>&amp;devRegTmp[0];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="struct_dev_info_1af0f58baff1038b170e024cf8167408e9" kindref="member">port</ref>.resize(1024);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_type<sp/>=<sp/>DEVLOAD_HANDLE_VALTYPE;<sp/>val_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(HANDLE);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegQueryValueEx(subKey,<sp/>DEVLOAD_HANDLE_VALNAME,<sp/>NULL,<sp/>&amp;val_type,<sp/>(LPBYTE)&amp;info.<ref refid="struct_dev_info_1a230f157beb5306dbdf2a86d78c818c72" kindref="member">handle</ref>,<sp/>&amp;val_size);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_type<sp/>=<sp/>DEVLOAD_DEVNAME_VALTYPE;<sp/>val_size<sp/>=<sp/>1023;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegQueryValueEx(subKey,<sp/>DEVLOAD_DEVNAME_VALNAME,<sp/>NULL,<sp/>&amp;val_type,<sp/>(LPBYTE)&amp;info.<ref refid="struct_dev_info_1af0f58baff1038b170e024cf8167408e9" kindref="member">port</ref>[0],<sp/>&amp;val_size);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dev_array.push_back(info);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey(subKey);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>RegCloseKey(activeKey);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!_dev_array.empty())</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_active<sp/>=<sp/>_dev_array.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_active<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>_handlerNotify();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_dev_manager_1a3a6cf5818220915487cbde9ac4547812" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1a3a6cf5818220915487cbde9ac4547812" kindref="member">DevManager::ActivateDevice</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hdl<sp/>=<sp/><ref refid="class_dev_manager_1a3a6cf5818220915487cbde9ac4547812" kindref="member">::ActivateDevice</ref>(<ref refid="class_dev_manager_1ab88d097de123fa29e1fe461487fde8ac" kindref="member">GetDevRegPath</ref>().c_str(),<sp/>100);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dev_manager_1a2c86c22e91e14387c113764bc15baf34" kindref="member">RefreshInfo</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL<sp/>!=<sp/>hdl);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_dev_manager_1abf0cb68f5afefa416a06ca345e86c711" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1abf0cb68f5afefa416a06ca345e86c711" kindref="member">DevManager::DeactivateDevice</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resv<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_active<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resv<sp/>=<sp/>(TRUE<sp/>==<sp/><ref refid="class_dev_manager_1abf0cb68f5afefa416a06ca345e86c711" kindref="member">::DeactivateDevice</ref>(_dev_array[_active].handle));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dev_manager_1a2c86c22e91e14387c113764bc15baf34" kindref="member">RefreshInfo</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resv;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_dev_manager_1a997da6b0ac9785920b925ecf01bb2045" refkind="member"><highlight class="normal">HANDLE<sp/><ref refid="class_dev_manager_1a997da6b0ac9785920b925ecf01bb2045" kindref="member">DevManager::ConnectDevice</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_active<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>::CreateFile(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dev_array[_active].port.c_str(),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a1f53ceced63c655fbb4f5d4852f3f2e4" kindref="member">VGD_AC_CONFIGURATOR</ref>,<sp/>0,<sp/>NULL,<sp/>OPEN_EXISTING,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(INVALID_HANDLE_VALUE<sp/>==<sp/>handle)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handle;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_dev_manager_1a9f89e89442cf4708a2d5e86606bb05de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1a9f89e89442cf4708a2d5e86606bb05de" kindref="member">DevManager::RegHandler</ref>(<ref refid="class_dev_handler" kindref="compound">DevHandler</ref><sp/>*handler)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_array_t::const_iterator<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(_handler_array.begin(),<sp/>_handler_array.end(),<sp/>handler);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>==<sp/>_handler_array.end())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_handler_array.push_back(handler);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_dev_manager_1a7b8ae5b6e2185e5161d934fbb0147b9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1a7b8ae5b6e2185e5161d934fbb0147b9c" kindref="member">DevManager::UnregHandler</ref>(<ref refid="class_dev_handler" kindref="compound">DevHandler</ref><sp/>*handler)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_array_t::iterator<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(_handler_array.begin(),<sp/>_handler_array.end(),<sp/>handler);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>!=<sp/>_handler_array.end())</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_handler_array.erase(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DevManager::_handlerNotify()</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_array_t::iterator<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_handler_array.begin();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>!=<sp/>_handler_array.end();<sp/>++<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;onDevChange();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_dev_manager_1a9d13ca8c315c618b9d9548539cc7b4f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_dev_manager_1a9d13ca8c315c618b9d9548539cc7b4f0" kindref="member">DevManager::SetActiveDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_a<sp/>=<sp/>_active;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>_active<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(old_a<sp/>!=<sp/>_active)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_handlerNotify();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/upkit/DevManager.cpp"/>
  </compounddef>
</doxygen>
