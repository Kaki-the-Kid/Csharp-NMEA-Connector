<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mdd_8c" kind="file" language="C++">
    <compoundname>mdd.c</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">linklist.h</includes>
    <includes local="no">serdbg.h</includes>
    <includes local="no">pegdser.h</includes>
    <includes local="no">devload.h</includes>
    <includes local="no">ceddk.h</includes>
    <includes local="no">pm.h</includes>
    <includes refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h" local="yes">config.h</includes>
    <includes refid="mdd_8h" local="yes">mdd.h</includes>
    <incdepgraph>
      <node id="5">
        <label>pegdser.h</label>
      </node>
      <node id="2">
        <label>windows.h</label>
      </node>
      <node id="1">
        <label>C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c</label>
        <link refid="mdd_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>mdd.h</label>
        <link refid="mdd_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pm.h</label>
      </node>
      <node id="7">
        <label>ceddk.h</label>
      </node>
      <node id="6">
        <label>devload.h</label>
      </node>
      <node id="9">
        <label>config.h</label>
        <link refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h"/>
      </node>
      <node id="4">
        <label>serdbg.h</label>
      </node>
      <node id="3">
        <label>linklist.h</label>
      </node>
      <node id="11">
        <label>serhw.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mdd_8c_1a3211f3ac6ab813c78c4f220dacc4dfb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_Close</definition>
        <argsstring>(PHW_OPEN_INFO pOpenHead)</argsstring>
        <name>COM_Close</name>
        <param>
          <type><ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref></type>
          <declname>pOpenHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1082" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1082" bodyend="1173" declfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_Deinit</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>COM_Deinit</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1249" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1249" bodyend="1318" declfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a571d953667eebf399462c0b8df34aad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VOID</type>
        <definition>VOID EvaluateEventFlag</definition>
        <argsstring>(PVOID pHead, ULONG fdwEventMask)</argsstring>
        <name>EvaluateEventFlag</name>
        <param>
          <type>PVOID</type>
          <declname>pHead</declname>
        </param>
        <param>
          <type>ULONG</type>
          <declname>fdwEventMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1905" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1905" bodyend="1960" declfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a35909f8da77e420e61195dff3302c5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL DllEntry</definition>
        <argsstring>(HINSTANCE hinstDll, DWORD dwReason, LPVOID lpReserved)</argsstring>
        <name>DllEntry</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hinstDll</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwReason</declname>
        </param>
        <param>
          <type>LPVOID</type>
          <declname>lpReserved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="81" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="81" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a572cdc024bb40a76c8d2b445aaec7919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VOID</type>
        <definition>VOID DoTxData</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>DoTxData</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="110" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="110" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1aff0d0406f7e36c041982caab8d702842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VOID</type>
        <definition>VOID SerialEventHandler</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>SerialEventHandler</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="196" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="196" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a39cb4cf3ed13840a570abb69a586145c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD WINAPI</type>
        <definition>static DWORD WINAPI SerialDispatchThread</definition>
        <argsstring>(PVOID pContext)</argsstring>
        <name>SerialDispatchThread</name>
        <param>
          <type>PVOID</type>
          <declname>pContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="420" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="420" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a473e446c5f2fb98cedabe6404fc66824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL StartDispatchThread</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>StartDispatchThread</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="466" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="466" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1af34affd078dccc7352d0116ec32dfccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL StopDispatchThread</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>StopDispatchThread</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="502" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="502" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a98720d759225609d42866faa373dce34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL ApplyDCB</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead, DCB *pDCB, BOOL fOpen)</argsstring>
        <name>ApplyDCB</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <param>
          <type>DCB *</type>
          <declname>pDCB</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>fOpen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="551" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="551" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a36b7ddef8d981d30befa47b3fe751310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE COM_Init</definition>
        <argsstring>(ULONG Identifier)</argsstring>
        <name>COM_Init</name>
        <param>
          <type>ULONG</type>
          <declname>Identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="641" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="641" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a4bcfa24868bf853471dbf77c54179722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE COM_Open</definition>
        <argsstring>(HANDLE pHead, DWORD AccessCode, DWORD ShareMode)</argsstring>
        <name>COM_Open</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>AccessCode</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>ShareMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="793" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="793" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a509c8a4ba9c45f93fb6b5894c83cbf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a3b083519fd2b41d83363afcfd5ebad9d" kindref="member">void</ref></type>
        <definition>void COM_PreClose</definition>
        <argsstring>(PHW_OPEN_INFO pOpenHead)</argsstring>
        <name>COM_PreClose</name>
        <param>
          <type><ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref></type>
          <declname>pOpenHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1018" column="6" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1018" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a74ffd644f82cdecda1fdab7d892d59ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL ProcessExiting</definition>
        <argsstring>(PHW_OPEN_INFO pOpenHead)</argsstring>
        <name>ProcessExiting</name>
        <param>
          <type><ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref></type>
          <declname>pOpenHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1179" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1179" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1afc1e63c9b24663266425178f0acfbaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_PreDeinit</definition>
        <argsstring>(PHW_INDEP_INFO pSerialHead)</argsstring>
        <name>COM_PreDeinit</name>
        <param>
          <type><ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref></type>
          <declname>pSerialHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1207" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1207" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1af995ebc898697a3a4d52259c3a692d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG</type>
        <definition>ULONG COM_Read</definition>
        <argsstring>(HANDLE pHead, PUCHAR pTargetBuffer, ULONG BufferLength)</argsstring>
        <name>COM_Read</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <param>
          <type>PUCHAR</type>
          <declname>pTargetBuffer</declname>
        </param>
        <param>
          <type>ULONG</type>
          <declname>BufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1333" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1333" bodyend="1536"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1af9afc47fd5c204fb4fcc426315010173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG</type>
        <definition>ULONG COM_Write</definition>
        <argsstring>(HANDLE pHead, PUCHAR pSourceBytes, ULONG NumberOfBytes)</argsstring>
        <name>COM_Write</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <param>
          <type>PUCHAR</type>
          <declname>pSourceBytes</declname>
        </param>
        <param>
          <type>ULONG</type>
          <declname>NumberOfBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1547" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1547" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a1787b5f4bf3efd393cb5e65c289f3fca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG</type>
        <definition>ULONG COM_Seek</definition>
        <argsstring>(HANDLE pHead, LONG Position, DWORD Type)</argsstring>
        <name>COM_Seek</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <param>
          <type>LONG</type>
          <declname>Position</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1714" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1714" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1acb280ad657824056998efd00d4e12726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_PowerUp</definition>
        <argsstring>(HANDLE pHead)</argsstring>
        <name>COM_PowerUp</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1730" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1730" bodyend="1743"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a2378521e1ebe1198b80864f78be2d737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_PowerDown</definition>
        <argsstring>(HANDLE pHead)</argsstring>
        <name>COM_PowerDown</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1752" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1752" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1af8568919b09fd84906c23b998644e148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG</type>
        <definition>ULONG SerialGetDroppedByteNumber</definition>
        <argsstring>(HANDLE pHead)</argsstring>
        <name>SerialGetDroppedByteNumber</name>
        <param>
          <type>HANDLE</type>
          <declname>pHead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1775" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1775" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1aee4ef1416739c614723a09a93ca3cbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL WINAPI</type>
        <definition>BOOL WINAPI WaitCommEvent</definition>
        <argsstring>(PHW_OPEN_INFO pOpenHead, PULONG pfdwEventMask, LPOVERLAPPED Unused)</argsstring>
        <name>WaitCommEvent</name>
        <param>
          <type><ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref></type>
          <declname>pOpenHead</declname>
        </param>
        <param>
          <type>PULONG</type>
          <declname>pfdwEventMask</declname>
        </param>
        <param>
          <type>LPOVERLAPPED</type>
          <declname>Unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1795" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1795" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="mdd_8c_1a26b95e7433cb445c991d30c02dde6a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL COM_IOControl</definition>
        <argsstring>(PHW_OPEN_INFO pOpenHead, DWORD dwCode, PBYTE pBufIn, DWORD dwLenIn, PBYTE pBufOut, DWORD dwLenOut, PDWORD pdwActualOut)</argsstring>
        <name>COM_IOControl</name>
        <param>
          <type><ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref></type>
          <declname>pOpenHead</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwCode</declname>
        </param>
        <param>
          <type>PBYTE</type>
          <declname>pBufIn</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwLenIn</declname>
        </param>
        <param>
          <type>PBYTE</type>
          <declname>pBufOut</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwLenOut</declname>
        </param>
        <param>
          <type>PDWORD</type>
          <declname>pdwActualOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" line="1979" column="1" bodyfile="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c" bodystart="1979" bodyend="2981"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Functions:</highlight></codeline>
<codeline lineno="3"><highlight class="comment">COM_Init</highlight></codeline>
<codeline lineno="4"><highlight class="comment">COM_Open</highlight></codeline>
<codeline lineno="5"><highlight class="comment">COM_Close</highlight></codeline>
<codeline lineno="6"><highlight class="comment">COM_Deinit</highlight></codeline>
<codeline lineno="7"><highlight class="comment">COM_Read</highlight></codeline>
<codeline lineno="8"><highlight class="comment">COM_Write</highlight></codeline>
<codeline lineno="9"><highlight class="comment">COM_Seek</highlight></codeline>
<codeline lineno="10"><highlight class="comment">COM_PowerUp</highlight></codeline>
<codeline lineno="11"><highlight class="comment">COM_PowerDown</highlight></codeline>
<codeline lineno="12"><highlight class="comment">COM_IOControl</highlight></codeline>
<codeline lineno="13"><highlight class="comment">DllEntry</highlight></codeline>
<codeline lineno="14"><highlight class="comment">SerialEventHandler</highlight></codeline>
<codeline lineno="15"><highlight class="comment">SerialDispatchThread</highlight></codeline>
<codeline lineno="16"><highlight class="comment">ApplyDCB</highlight></codeline>
<codeline lineno="17"><highlight class="comment">SerialGetDroppedByteNumber</highlight></codeline>
<codeline lineno="18"><highlight class="comment">WaitCommEvent</highlight></codeline>
<codeline lineno="19"><highlight class="comment">EvaluateEventFlag</highlight></codeline>
<codeline lineno="20"><highlight class="comment">ProcessExiting</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linklist.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;serdbg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pegdser.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;devload.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ceddk.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mdd_8h" kindref="compound">mdd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(VGD_USE_LOG==VGD_LOG_MODE_FULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="log_8h" kindref="compound">log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Debug<sp/>Zones.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_INIT<sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_OPEN<sp/><sp/><sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_READ<sp/><sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_WRITE<sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_CLOSE<sp/><sp/><sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_IOCTL<sp/><sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_THREAD<sp/><sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_EVENTS<sp/><sp/>0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_CRITSEC<sp/>0x0100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_FLOW<sp/><sp/><sp/><sp/>0x0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_IR<sp/><sp/><sp/><sp/><sp/><sp/>0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_NOTHING<sp/>0x0800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_ALLOC<sp/><sp/><sp/>0x1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_FUNCTION<sp/>0x2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_WARNING<sp/>0x4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DBG_ERROR<sp/><sp/><sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">DBGPARAM<sp/>dpCurSettings<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Serial&quot;</highlight><highlight class="normal">),<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Init&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Open&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Read&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Write&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Close&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Ioctl&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Thread&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;CritSec&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;FlowCtrl&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Infrared&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;User<sp/>Read&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Alloc&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Function&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Warning&quot;</highlight><highlight class="normal">),TEXT(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>some<sp/>internally<sp/>used<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">BOOL<sp/><ref refid="mdd_8c_1a3211f3ac6ab813c78c4f220dacc4dfb4" kindref="member">COM_Close</ref>(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/><sp/>pOpenHead);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">BOOL<sp/><ref refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" kindref="member">COM_Deinit</ref>(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/>pSerialHead);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">VOID<sp/><ref refid="mdd_8c_1a571d953667eebf399462c0b8df34aad5" kindref="member">EvaluateEventFlag</ref>(PVOID<sp/>pHead,<sp/>ULONG<sp/>fdwEventMask);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>DllEntry<sp/>|<sp/>Process<sp/>attach/detach<sp/>api.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>@rdesc<sp/>The<sp/>return<sp/>is<sp/>a<sp/>BOOL,<sp/>representing<sp/>success<sp/>(TRUE)<sp/>or<sp/>failure<sp/>(FALSE).</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="81" refid="mdd_8c_1a35909f8da77e420e61195dff3302c5f6" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a35909f8da77e420e61195dff3302c5f6" kindref="member">DllEntry</ref>(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HINSTANCE<sp/><sp/><sp/>hinstDll,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>Instance<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>dwReason,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>Reason<sp/>routine<sp/>is<sp/>called.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPVOID<sp/><sp/>lpReserved<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>system<sp/>parameter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>proc_id<sp/>=<sp/>GetCurrentProcessId();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwReason<sp/>==<sp/>DLL_PROCESS_ATTACH<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOGINIT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGREGISTER(hinstDll);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;serial<sp/>port<sp/>process<sp/>attach,<sp/>process<sp/>id<sp/>=<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/>proc_id));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DisableThreadLibraryCalls((HMODULE)<sp/>hinstDll);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwReason<sp/>==<sp/>DLL_PROCESS_DETACH<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;process<sp/>detach<sp/>called\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOGDONE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>@func<sp/><sp/>VOID<sp/>|<sp/>DoTxData<sp/>|<sp/>Sends<sp/>next<sp/>available<sp/>chunk<sp/>of<sp/>TX<sp/>data.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">VOID</highlight></codeline>
<codeline lineno="110" refid="mdd_8c_1a572cdc024bb40a76c8d2b445aaec7919" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a572cdc024bb40a76c8d2b445aaec7919" kindref="member">DoTxData</ref>(<sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/>pSerialHead<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>PHW_VTBL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DoPutBytes<sp/>wait<sp/>for<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a472e933fda22c512633461c3e6c4accd" kindref="member">TxEnterCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DoPutBytes<sp/>got<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>device<sp/>was<sp/>closed<sp/>from<sp/>under<sp/>us,<sp/>stop<sp/>transmitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD|ZONE_WRITE<sp/>,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Device<sp/>closed!<sp/>Quit<sp/>transmission!\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;SerialEventHandler:<sp/>%d<sp/>sent<sp/>up-to-now.\n\r&quot;</highlight><highlight class="normal">),pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab7d5a5cbc927b6c8505c746c0e58d5a4" kindref="member">TxBytesSent</ref>));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a9dc9ed79720fe74eb08f637d5a000fc2" kindref="member">Permissions</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1af00f0a0d0bebd5b410bad453109b5415" kindref="member">TxCharBuffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1abe41a3f81c7e5b95a7de954ea55ec31c" kindref="member">Length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>flow<sp/>control<sp/>status,<sp/>and<sp/>if<sp/>not<sp/>flowed<sp/>off,<sp/>call<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hw<sp/>TX<sp/>routine<sp/>to<sp/>actually<sp/>transmit<sp/>some<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1af00f0a0d0bebd5b410bad453109b5415" kindref="member">TxCharBuffer</ref><sp/>&amp;&amp;<sp/><ref refid="mdd_8h_1a19cfb18b7b7624d07bad804fde918569" kindref="member">TxBytesAvail</ref>(pSerialHead)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>oldPerm<sp/>=<sp/>SetProcPermissions(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a9dc9ed79720fe74eb08f637d5a000fc2" kindref="member">Permissions</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_TOGGLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD|ZONE_WRITE<sp/>,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RTS<sp/>set.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetRTS(pHWHead);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>transmit<sp/>anything<sp/>if<sp/>we<sp/>are<sp/>flowed<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>still<sp/>need<sp/>to<sp/>call<sp/>TxIntrHandler<sp/>so<sp/>that<sp/>the<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>cleared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FLOW|ZONE_WRITE<sp/>,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;XOFF&apos;ed,<sp/>send<sp/>nothing.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;TxRead<sp/>=<sp/>%d,<sp/>TxLength<sp/>=<sp/>%d,<sp/>TxBytesAvail<sp/>=<sp/>%d.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead),<sp/><ref refid="mdd_8h_1a7d32b2492abbaecf351cb8183bd6b8fb" kindref="member">TxLength</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a19cfb18b7b7624d07bad804fde918569" kindref="member">TxBytesAvail</ref>(pSerialHead)));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len<sp/>=<sp/><ref refid="mdd_8h_1a19cfb18b7b7624d07bad804fde918569" kindref="member">TxBytesAvail</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>copy<sp/>%d<sp/>bytes\r\n&quot;</highlight><highlight class="normal">),<sp/>Len));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWTxIntrHandler(pHWHead,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a97452572397273f68c257a74d006d810" kindref="member">TxBuffRead</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Len);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;%d<sp/>bytes<sp/>actually<sp/>copied.\r\n&quot;</highlight><highlight class="normal">),<sp/>Len));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>Fifo<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4e08c1061a980d27c3c26fce26017460" kindref="member">TxBytes</ref><sp/>+=<sp/>Len;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab7d5a5cbc927b6c8505c746c0e58d5a4" kindref="member">TxBytesSent</ref><sp/>+=<sp/>Len;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead)<sp/>+=<sp/>Len;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>if<sp/>everything<sp/>was<sp/>Tx&apos;ed,<sp/>don&apos;t<sp/>signal<sp/>TX<sp/>complete<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>get<sp/>transmit<sp/>interrupt<sp/>indicating<sp/>that<sp/>the<sp/>data<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>been<sp/>sent.<sp/><sp/>Since<sp/>few/no<sp/>UARTS<sp/>have<sp/>a<sp/>way<sp/>to<sp/>tell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>much<sp/>data<sp/>remains,<sp/>we<sp/>don&apos;t<sp/>bother<sp/>trying<sp/>to<sp/>adjust<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>length<sp/>to<sp/>account<sp/>for<sp/>partially<sp/>completed<sp/>hardware<sp/>buffer<sp/>TX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetProcPermissions(oldPerm);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>left<sp/>to<sp/>send,<sp/>we<sp/>need<sp/>to<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>interrupt<sp/>handler<sp/>so<sp/>that<sp/>it<sp/>can<sp/>clear<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transmit<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWTxIntrHandler(pHWHead,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Transmission<sp/>complete,<sp/>%d<sp/>bytes<sp/>sent\r\n&quot;</highlight><highlight class="normal">),<sp/>Len));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a9dc9ed79720fe74eb08f637d5a000fc2" kindref="member">Permissions</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1af00f0a0d0bebd5b410bad453109b5415" kindref="member">TxCharBuffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1abe41a3f81c7e5b95a7de954ea55ec31c" kindref="member">Length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab5b1dbcd96eb9c181724373574422eb7" kindref="member">TxLeaveCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DoPutBytes<sp/>released<sp/>CritSec:<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">VOID</highlight></codeline>
<codeline lineno="196" refid="mdd_8h_1aff0d0406f7e36c041982caab8d702842" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1aff0d0406f7e36c041982caab8d702842" kindref="member">SerialEventHandler</ref>(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>PHW_VTBL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharIndex;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalLeft<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERRUPT_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>=<sp/>INTR_NONE;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RxDataAvail<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+SerialEventHandler,<sp/>pHead<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ae493e81d52c5850afe67d084aac77d01" kindref="member">KillRxThread</ref><sp/>||</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Exitting<sp/>thread\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExitThread(0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE<sp/>-<sp/>This<sp/>one<sp/>is<sp/>a<sp/>little<sp/>tricky.<sp/><sp/>If<sp/>the<sp/>only<sp/>owner<sp/>is<sp/>a<sp/>monitoring<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>I<sp/>don&apos;t<sp/>have<sp/>an<sp/>owner<sp/>for<sp/>read/write,<sp/>yet<sp/>I<sp/>might<sp/>be<sp/>in<sp/>this<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>a<sp/>change<sp/>in<sp/>line<sp/>status.<sp/><sp/>Lets<sp/>just<sp/>do<sp/>the<sp/>best<sp/>we<sp/>can<sp/>and<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>count<sp/>for<sp/>the<sp/>access<sp/>owner<sp/>if<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab0796fe82ce9bc7a1146ec818219d226" kindref="member">COM_INC_USAGE_CNT</ref>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>=<sp/>pFuncTbl-&gt;HWGetIntrType(pHWHead))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;SerialEventHandler,<sp/>No<sp/>Interrupt.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;SerialEventHandler,<sp/>Interrupts<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref>));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>&amp;<sp/>INTR_RX<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>read<sp/>data<sp/>event.<sp/>Optimize<sp/>the<sp/>read<sp/>by<sp/>reading<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>user<sp/>has<sp/>not<sp/>specified<sp/>using<sp/>xflow<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>event/error/eof<sp/>characters.<sp/>Ack<sp/>the<sp/>receive,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unmask<sp/>the<sp/>interrupt,<sp/>get<sp/>the<sp/>current<sp/>data<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>see<sp/>if<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>We<sp/>have<sp/>to<sp/>copy<sp/>RxRead<sp/>and<sp/>RxWrite<sp/>index<sp/>to<sp/>local<sp/>in<sp/>order<sp/>to<sp/>make<sp/>it<sp/>atomic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>DWORD<sp/>RxWIndex,<sp/>RxRIndex;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD|ZONE_READ<sp/>,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Rx<sp/>Event\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a457ee310a66bcb363737d6565fa5ef65" kindref="member">RxEnterCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RxWIndex<sp/>=<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RxRIndex<sp/>=<sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RxRIndex<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>leave<sp/>one<sp/>byte<sp/>free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)<sp/>-<sp/>RxWIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)<sp/>-<sp/>RxWIndex;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RxRIndex<sp/>&gt;<sp/>RxWIndex<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/>RxRIndex<sp/>-<sp/>RxWIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoomLeft<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1aa0896838c3e1b1617b4fa28aaeb73ae5" kindref="member">DroppedBytesPDD</ref><sp/>+=</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWRxIntrHandler(pHWHead,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RoomLeft);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BYTE<sp/><sp/><sp/><sp/>TempBuf[16];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWRxIntrHandler(pHWHead,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TempBuf,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RoomLeft);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab75a4cc3fd646156fd74e1baf5dc3f69" kindref="member">DroppedBytesMDD</ref><sp/>+=<sp/>RoomLeft;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WARN|ZONE_READ,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Tossed<sp/>%d<sp/>bytes\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ<sp/>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;After<sp/>HWGetBytes,<sp/>Fifo(R=%d,W=%d,BA=%d,L=%d)<sp/>ByteRead=%d\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead),<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead),<sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>flow<sp/>control<sp/>enabled<sp/>then<sp/>we<sp/>need<sp/>to<sp/>scan<sp/>for<sp/>XON/XOFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a44589f14378955069ba4f4138982a1d2" kindref="member">XFlow</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>CharIndex=0;<sp/>CharIndex<sp/>&lt;<sp/>RoomLeft;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)[CharIndex]<sp/>==</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffChar<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Received<sp/>XOFF\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(<ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)+CharIndex,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)+CharIndex+1,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>-<sp/>CharIndex);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft--;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)[CharIndex]<sp/>==</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XonChar<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Received<sp/>XON\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(<ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)+CharIndex,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1acbd964415e57fa9ce9108b91620f0d9d" kindref="member">RxBuffWrite</ref>(pSerialHead)+CharIndex+1,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft<sp/>-<sp/>CharIndex);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoomLeft--;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>disabled<sp/>TX<sp/>on<sp/>XOFF,<sp/>so<sp/>now<sp/>we<sp/>need<sp/>to<sp/>start<sp/>sending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>again.<sp/>Easiest<sp/>way<sp/>is<sp/>to<sp/>pretend<sp/>we<sp/>saw<sp/>a<sp/>TX<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>|=<sp/>INTR_TX;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharIndex++;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4a28f621791ed5b2f8945ea4bf7e9a79" kindref="member">RxBytes</ref><sp/>+=<sp/>RoomLeft;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead)<sp/>=<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead)+RoomLeft&lt;<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)?<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead)+RoomLeft:<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead)+RoomLeft-<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RoomLeft<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RxDataAvail<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Support<sp/>DTR_CONTROL_HANDSHAKE/RTS_CONTROL_HANDSHAKE</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>signal<sp/>is<sp/>cleared<sp/>when<sp/>the<sp/>input<sp/>buffer<sp/>is<sp/>more<sp/>than<sp/>3/4<sp/>full.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_HANDSHAKE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4*<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>&gt;<sp/>(3*<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DTR_CONTROL_HANDSHAKE<sp/>Clearing<sp/>DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearDTR(pHWHead);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_HANDSHAKE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4*<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>&gt;<sp/>(3*<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RTS_CONTROL_HANDSHAKE<sp/>Clearing<sp/>RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearRTS(pHWHead);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Xon/Xoff<sp/>flow<sp/>control<sp/>is<sp/>desired.<sp/>check<sp/>the<sp/>limit<sp/>against</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>remaining<sp/>room<sp/>and<sp/>act<sp/>accordingly.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fInX<sp/>&amp;&amp;<sp/>!(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffLim<sp/>&gt;=</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)<sp/>-<sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Sending<sp/>XOFF\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWXmitComChar(pHWHead,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffChar);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fTXContinueOnXoff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6a416437a9d8b47c45f602d67758e65c" kindref="member">RxLeaveCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>&amp;<sp/>INTR_TX<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD|ZONE_WRITE<sp/>,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Tx<sp/>Event\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a572cdc024bb40a76c8d2b445aaec7919" kindref="member">DoTxData</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>&amp;<sp/>INTR_MODEM)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Other<sp/>Event,<sp/>it:%x\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>low<sp/>level<sp/>status<sp/>clean<sp/>up<sp/>code.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWModemIntrHandler(pHWHead);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref><sp/>&amp;<sp/>INTR_LINE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Line<sp/>Event,<sp/>it:%x\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a76868a71f10b10fd75a76f81ad936660" kindref="member">it</ref>));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>low<sp/>level<sp/>line<sp/>status<sp/>clean<sp/>up<sp/>code.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Then<sp/>unmask<sp/>the<sp/>interrupt</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWLineIntrHandler(pHWHead);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>kept<sp/>this<sp/>till<sp/>the<sp/>end<sp/>to<sp/>optimize<sp/>the<sp/>above<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RxDataAvail<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>COM_Read<sp/>that<sp/>bytes<sp/>are<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a571d953667eebf399462c0b8df34aad5" kindref="member">EvaluateEventFlag</ref>(pSerialHead,<sp/>EV_RXCHAR);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD<sp/>,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-SerialEventHandler,<sp/>Fifo(R=%d,W=%d,L=%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead),<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a5297f1634cd352c1d1405ae209389c7d" kindref="member">COM_DEC_USAGE_CNT</ref>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>@func<sp/><sp/>ULONG<sp/>|<sp/>SerialDispatchThread<sp/>|<sp/>Main<sp/>serial<sp/>event<sp/>dispatch<sp/>thread<sp/>code.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>is<sp/>the<sp/>reading<sp/>and<sp/>dispatching<sp/>thread.<sp/>It<sp/>gets<sp/>the</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/><sp/>event<sp/>associated<sp/>with<sp/>the<sp/>logical<sp/>interrupt<sp/>dwIntID<sp/>and<sp/>calls</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/><sp/>hardware<sp/>specific<sp/>routines<sp/>to<sp/>determine<sp/>whether<sp/>it&apos;s<sp/>a<sp/>receive<sp/>event</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/><sp/>or<sp/>a<sp/>transmit<sp/>event.<sp/>If<sp/>it&apos;s<sp/>a<sp/>transmit<sp/>event,<sp/>it<sp/>calls<sp/>the<sp/>HW<sp/>tx<sp/>handler.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>it&apos;s<sp/>a<sp/>receive<sp/>event,<sp/>it<sp/>calls<sp/>for<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>and<sp/>calls</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/><sp/>atomic<sp/>GetByte()<sp/>to<sp/>extract<sp/>characters<sp/>and<sp/>put<sp/>them<sp/>into<sp/>the<sp/>drivers</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/><sp/>buffer<sp/>represented<sp/>by<sp/>pSerialHead-&gt;pTargetBuffer,<sp/>managing<sp/>waiting</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>events<sp/>and<sp/>checking<sp/>to<sp/>see<sp/>if<sp/>those<sp/>signals<sp/>correspond<sp/>to<sp/>reading.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>relies<sp/>on<sp/>NK<sp/>masking<sp/>the<sp/>interrupts<sp/>while<sp/>it<sp/>does<sp/>it&apos;s<sp/>thing,<sp/>calling</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/><sp/>InterruptDone()<sp/>to<sp/>unmask<sp/>them<sp/>for<sp/>each<sp/>of<sp/>the<sp/>above<sp/>cases.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/><sp/>Not<sp/>exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>@rdesc<sp/>This<sp/>thread<sp/>technically<sp/>returns<sp/>a<sp/>status,<sp/>but<sp/>in<sp/>practice,<sp/>doesn&apos;t<sp/>return</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>the<sp/>device<sp/>is<sp/>open.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD<sp/>WINAPI</highlight></codeline>
<codeline lineno="420"><highlight class="normal">SerialDispatchThread(</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/>pContext<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@parm<sp/>[IN]<sp/>Pointer<sp/>to<sp/>main<sp/>data<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead<sp/><sp/><sp/><sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pContext;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitReturn;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Entered<sp/>SerialDispatchThread<sp/>%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>possible<sp/>for<sp/>a<sp/>PDD<sp/>to<sp/>use<sp/>this<sp/>routine<sp/>in<sp/>its<sp/>private<sp/>thread,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>just<sp/>assume<sp/>that<sp/>the<sp/>MDD<sp/>synchronization<sp/>mechanism<sp/>is<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;BindFlags<sp/>&amp;<sp/>THREAD_IN_MDD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Spinning<sp/>in<sp/>dispatch<sp/>thread<sp/>%X<sp/>%X\n\r&quot;</highlight><highlight class="normal">),<sp/>pSerialHead,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(20);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>the<sp/>event<sp/>that<sp/>any<sp/>serial<sp/>port<sp/>action<sp/>creates.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ae493e81d52c5850afe67d084aac77d01" kindref="member">KillRxThread</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Event<sp/>%X,<sp/>%d\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref>,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;dwIntID<sp/>));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitReturn<sp/>=<sp/>WaitForSingleObject(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref>,<sp/>INFINITE);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1aff0d0406f7e36c041982caab8d702842" kindref="member">SerialEventHandler</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_THREAD,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;SerialDispatchThread<sp/>%x<sp/>exiting\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@doc<sp/>INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>|<sp/>StartDispatchThread<sp/>|<sp/>Start<sp/>thread<sp/>if<sp/>requested<sp/>by<sp/>PDD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/>|<sp/>pSerialHead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>success,<sp/>FALSE<sp/>if<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="466" refid="mdd_8c_1a473e446c5f2fb98cedabe6404fc66824" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a473e446c5f2fb98cedabe6404fc66824" kindref="member">StartDispatchThread</ref>(</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>dispatch<sp/>thread<sp/>and<sp/>it&apos;s<sp/>kill<sp/>flag.<sp/>Note<sp/>that<sp/>the<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fills<sp/>in<sp/>its<sp/>own<sp/>handle<sp/>in<sp/>pSerialHead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ae493e81d52c5850afe67d084aac77d01" kindref="member">KillRxThread</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Spinning<sp/>thread%X\n\r&quot;</highlight><highlight class="normal">),<sp/>pSerialHead));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>=<sp/>CreateThread(NULL,0,<sp/>SerialDispatchThread,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead,<sp/>0,NULL);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_ERROR,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>dispatch<sp/>thread<sp/>(%d)\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetLastError()));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Created<sp/>receive<sp/>thread<sp/>%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref>));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@doc<sp/>INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>|<sp/>StartDispatchThread<sp/>|<sp/>Stop<sp/>thread,<sp/>disable<sp/>interrupt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/>|<sp/>pSerialHead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>success,<sp/>FALSE<sp/>if<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="502" refid="mdd_8c_1af34affd078dccc7352d0116ec32dfccf" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1af34affd078dccc7352d0116ec32dfccf" kindref="member">StopDispatchThread</ref>(</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pThisThread<sp/>=<sp/>GetCurrentThread();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority256;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>an<sp/>interrupt<sp/>handler<sp/>thread,<sp/>kill<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;\r\nTrying<sp/>to<sp/>close<sp/>dispatch<sp/>thread\r\n&quot;</highlight><highlight class="normal">)));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>priority<sp/>of<sp/>the<sp/>dispatch<sp/>thread<sp/>to<sp/>be<sp/>equal<sp/>to<sp/>this<sp/>one,</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>that<sp/>it<sp/>shuts<sp/>down<sp/>before<sp/>we<sp/>free<sp/>its<sp/>memory.<sp/>If<sp/>this<sp/>routine</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>has<sp/>been<sp/>called<sp/>from<sp/>SerialDllEntry<sp/>then<sp/>RxCharBuffer<sp/>is<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NULL<sp/>and<sp/>the<sp/>dispatch<sp/>thread<sp/>is<sp/>already<sp/>dead,<sp/>so<sp/>just<sp/>skip<sp/>the</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>code<sp/>which<sp/>kills<sp/>the<sp/>thread.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority256<sp/>=<sp/>CeGetThreadPriority(pThisThread);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CeSetThreadPriority(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref>,<sp/>priority256);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Signal<sp/>the<sp/>Dispatch<sp/>thread<sp/>to<sp/>die.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ae493e81d52c5850afe67d084aac77d01" kindref="member">KillRxThread</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;\r\nTrying<sp/>to<sp/>signal<sp/>serial<sp/>thread.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitForSingleObject(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref>,<sp/>3000);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(10);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;\r\nTrying<sp/>to<sp/>call<sp/>CloseHandle\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;\r\nReturned<sp/>from<sp/>CloseHandle\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*<sp/><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>|<sp/>ApplyDCB<sp/>|<sp/>Apply<sp/>the<sp/>current<sp/>DCB.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>will<sp/>apply<sp/>the<sp/>current<sp/>DCB<sp/>settings<sp/>to<sp/>the<sp/>device.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>will<sp/>also<sp/>call<sp/>to<sp/>the<sp/>PDD<sp/>to<sp/>set<sp/>the<sp/>PDD<sp/>values.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="551" refid="mdd_8c_1a98720d759225609d42866faa373dce34" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a98720d759225609d42866faa373dce34" kindref="member">ApplyDCB</ref><sp/>(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/>pSerialHead,<sp/>DCB<sp/>*pDCB,<sp/>BOOL<sp/>fOpen)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+ApplyDCB,<sp/>pSerialHead:<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/>pSerialHead));</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWObj-&gt;pFuncTbl-&gt;HWSetDCB(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDCB)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!fOpen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>PDD<sp/>SetDCB<sp/>was<sp/>successful,<sp/>save<sp/>the<sp/>supplied<sp/>DCB<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>port<sp/>to<sp/>match<sp/>these<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>),<sp/>pDCB,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_DISABLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWClearDTR(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_ENABLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWSetDTR(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_DISABLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWClearRTS(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_ENABLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWSetRTS(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4*<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>&gt;<sp/>(3*<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL:DTR_CONTROL_HANDSHAKE<sp/>Clearing<sp/>DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWClearDTR(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL:DTR_CONTROL_HANDSHAKE<sp/>Setting<sp/>DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWSetDTR(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4*<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>&gt;<sp/>(3*<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL:RTS_CONTROL_HANDSHAKE<sp/>Clearing<sp/>RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWClearRTS(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL:RTS_CONTROL_HANDSHAKE<sp/>Setting<sp/>RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWSetRTS(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fOutX<sp/>||<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fInX<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a44589f14378955069ba4f4138982a1d2" kindref="member">XFlow</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a44589f14378955069ba4f4138982a1d2" kindref="member">XFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-ApplyDCB\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@doc<sp/>EXTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/>|<sp/>COM_INIT<sp/>|<sp/>Serial<sp/>device<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/>|<sp/>Identifier<sp/>|<sp/>Port<sp/>identifier.<sp/><sp/>The<sp/>device<sp/>loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passes<sp/>in<sp/>the<sp/>registry<sp/>key<sp/>that<sp/>contains<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>about<sp/>the<sp/>active<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>is<sp/>called<sp/>at<sp/>device<sp/>load<sp/>time<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>perform<sp/>any<sp/>initialization.<sp/><sp/><sp/>Typically<sp/>the<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>routine<sp/>does<sp/>as<sp/>little<sp/>as<sp/>possible,<sp/>postponing<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocation<sp/>and<sp/>device<sp/>power-on<sp/>to<sp/>Open<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>serial<sp/>head<sp/>which<sp/>is<sp/>passed<sp/>into<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>COM_OPEN<sp/>and<sp/>COM_DEINIT<sp/>entry<sp/>points<sp/>as<sp/>a<sp/>device<sp/>handle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="641" refid="mdd_8c_1a36b7ddef8d981d30befa47b3fe751310" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a36b7ddef8d981d30befa47b3fe751310" kindref="member">COM_Init</ref>(</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/>Identifier</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HWBufferSize;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>INTERNAL:<sp/>this<sp/>routine<sp/>initializes<sp/>the<sp/>hardware<sp/>abstraction<sp/>interface</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>via<sp/>HWInit().<sp/>It<sp/>allocates<sp/>a<sp/>data<sp/>structure<sp/>representing<sp/>this</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>instantiation<sp/>of<sp/>the<sp/>device.<sp/>It<sp/>also<sp/>creates<sp/>an<sp/>event<sp/>and<sp/>initializes</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>a<sp/>critical<sp/>section<sp/>for<sp/>receiving<sp/>as<sp/>well<sp/>as<sp/>registering<sp/>the<sp/>logical</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>interrupt<sp/>dwIntID<sp/>with<sp/>NK<sp/>via<sp/>InterruptInitialize.<sp/>This<sp/>call</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>requires<sp/>that<sp/>the<sp/>hardware<sp/>dependent<sp/>portion<sp/>export<sp/>apis<sp/>that<sp/>return</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>physical<sp/>address<sp/>of<sp/>the<sp/>receive<sp/>buffer<sp/>and<sp/>the<sp/>size<sp/>of<sp/>that<sp/>buffer.</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Finally,<sp/>it<sp/>creates<sp/>a<sp/>buffer<sp/>to<sp/>act<sp/>as<sp/>an<sp/>intermediate</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>buffer<sp/>when<sp/>receiving.</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_Init\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>our<sp/>control<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead<sp/><sp/>=<sp/><sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)LocalAlloc(LPTR,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">HW_INDEP_INFO</ref>));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>LocalAlloc<sp/>did<sp/>stuff<sp/>ok<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT<sp/>|<sp/>ZONE_ERROR,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory<sp/>for<sp/>pSerialHead,<sp/>COM_Init<sp/>failed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Init<sp/>-<sp/>pSerialHead:<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/>pSerialHead));</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially,<sp/>open<sp/>list<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeListHead(<sp/>&amp;pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref><sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a1f707f4702fc89cf2b46876e4c44f0bc" kindref="member">fEventMask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>CommTimeouts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadIntervalTimeout<sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1adf575f7828c95d5d24dba550f2e4902a" kindref="member">VGD_READ_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutMultiplier<sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a8afd6fa4cd6e07b5453bf93a0bc9c121" kindref="member">VGD_READ_TIMEOUT_MULTIPLIER</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutConstant<sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1ae4b1aae3d1959e0a2b3eadbe319ae225" kindref="member">VGD_READ_TIMEOUT_CONSTANT</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutMultiplier<sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1ac47cad22e232994357eac51e13f1825e" kindref="member">VGD_WRITE_TIMEOUT_MULTIPLIER</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutConstant<sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a4fe0187a710728b6b6a433d4aaabe67c" kindref="member">VGD_WRITE_TIMEOUT_CONSTANT</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>tx<sp/>and<sp/>rx<sp/>events<sp/>and<sp/>stash<sp/>in<sp/>global<sp/>struct<sp/>field.<sp/>Check<sp/>return.</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref><sp/>=<sp/>CreateEvent(0,<sp/>FALSE,<sp/>FALSE,<sp/>NULL);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref><sp/>=<sp/>CreateEvent(0,<sp/>FALSE,<sp/>FALSE,<sp/>NULL);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref><sp/>=<sp/>CreateEvent(0,<sp/>FALSE,<sp/>FALSE,<sp/>NULL);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref><sp/>=<sp/>CreateEvent(0,<sp/>FALSE,<sp/>FALSE,<sp/>NULL);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref><sp/>||<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref><sp/>||</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref><sp/>||<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_ERROR<sp/>|<sp/>ZONE_INIT,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>event,<sp/>COM_Init<sp/>failed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(pSerialHead);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>critical<sp/>sections<sp/>that<sp/>will<sp/>guard<sp/>the<sp/>parts<sp/>of</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>receive<sp/>and<sp/>transmit<sp/>buffers.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af0c3a1ddf755418037899b51258b1a73" kindref="member">ReceiveCritSec1</ref>));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a66259a9f960694896fe2e851052f12f3" kindref="member">Priority256</ref><sp/>=<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a8bf06100969f417ea26aca31e00fcb8e" kindref="member">VGD_DEFAULT_CE_THREAD_PRIORITY</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>hardware<sp/>dependent<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref><sp/>=<sp/><ref refid="pdd_8c_1a572a34f7ea81b64a301d58b85a1f1113" kindref="member">GetSerialObject</ref>(0);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_ERROR<sp/>|<sp/>ZONE_INIT,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>GetSerialObject,<sp/>COM_Init<sp/>failed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(pSerialHead);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>call<sp/>HWInit(%s,0x%X)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Identifier,<sp/>pSerialHead));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWHead<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl-&gt;HWInit(Identifier,<sp/>pSerialHead,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref><sp/>=<sp/>pHWHead;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>HWInit<sp/>did<sp/>stuff<sp/>ok.<sp/><sp/>From<sp/>here<sp/>on<sp/>out,<sp/>call<sp/>Deinit<sp/>function</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>things<sp/>fail.</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_ERROR,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Hardware<sp/>doesn&apos;t<sp/>init<sp/>correctly,<sp/>COM_Init<sp/>failed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" kindref="member">COM_Deinit</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Back<sp/>from<sp/>hardware<sp/>init\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>at<sp/>least<sp/>twice<sp/>the<sp/>hardware<sp/>buffer<sp/>size<sp/>so<sp/>we<sp/>have<sp/>headroom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>HWBufferSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>*<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl-&gt;HWGetRxBufferSize(pHWHead);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>rx<sp/>buffer<sp/>and<sp/>buffer<sp/>length<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a054f4f56ebe3a548d88477ccc6e07eaa" kindref="member">Length</ref><sp/>=</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>HWBufferSize<sp/>&gt;<sp/><ref refid="mdd_8h_1a739a2a1a0047c98ac1b18ecd25dac092" kindref="member">RX_BUFFER_SIZE</ref><sp/>?<sp/>HWBufferSize:<ref refid="mdd_8h_1a739a2a1a0047c98ac1b18ecd25dac092" kindref="member">RX_BUFFER_SIZE</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref><sp/>=</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalAlloc(LPTR,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a054f4f56ebe3a548d88477ccc6e07eaa" kindref="member">Length</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_ERROR,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>receive<sp/>buffer,<sp/>COM_Init<sp/>failed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" kindref="member">COM_Deinit</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RxHead<sp/>init&apos;ed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1af20d7b7f53e9eafdb9367c86f2be92aa" kindref="member">RxResetFifo</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a0a0b8480e8876c789be53c3f9886d221" kindref="member">CS</ref>));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RxBuffer<sp/>init&apos;ed<sp/>with<sp/>start<sp/>at<sp/>%x\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref>));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;BindFlags<sp/>&amp;<sp/>THREAD_AT_INIT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hook<sp/>the<sp/>interrupt<sp/>and<sp/>start<sp/>the<sp/>associated<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/><ref refid="mdd_8c_1a473e446c5f2fb98cedabe6404fc66824" kindref="member">StartDispatchThread</ref>(<sp/>pSerialHead<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>on<sp/>InterruptInitialize<sp/>or<sp/>CreateThread.<sp/><sp/>Bail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" kindref="member">COM_Deinit</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>now<sp/>that<sp/>everything<sp/>is<sp/>ready<sp/>on<sp/>our<sp/>end,<sp/>give<sp/>the<sp/>PDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>last<sp/>chance<sp/>to<sp/>init<sp/>interrupts,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="_l_i_c_e_n_s_e_8_t_x_t_1a3b083519fd2b41d83363afcfd5ebad9d" kindref="member">void</ref>)<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl-&gt;HWPostInit(<sp/>pHWHead<sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Init\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pSerialHead);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/>|<sp/>COM_Open<sp/>|<sp/>Serial<sp/>port<sp/>driver<sp/>initialization.</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*<sp/><sp/>Description:<sp/>This<sp/>routine<sp/>must<sp/>be<sp/>called<sp/>by<sp/>the<sp/>user<sp/>to<sp/>open<sp/>the</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/><sp/>serial<sp/>device.<sp/>The<sp/>HANDLE<sp/>returned<sp/>must<sp/>be<sp/>used<sp/>by<sp/>the<sp/>application<sp/>in</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*<sp/><sp/>all<sp/>subsequent<sp/>calls<sp/>to<sp/>the<sp/>serial<sp/>driver.<sp/>This<sp/>routine<sp/>starts<sp/>the<sp/>thread</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/><sp/>which<sp/>handles<sp/>the<sp/>serial<sp/>events.</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/><sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>@rdesc<sp/>This<sp/>routine<sp/>returns<sp/>a<sp/>HANDLE<sp/>representing<sp/>the<sp/>device.</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="793" refid="mdd_8c_1a4bcfa24868bf853471dbf77c54179722" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a4bcfa24868bf853471dbf77c54179722" kindref="member">COM_Open</ref>(</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/>pHead,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>Handle<sp/>returned<sp/>by<sp/>COM_Init.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>AccessCode,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>access<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>ShareMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>share<sp/>mode<sp/>-<sp/>Not<sp/>used<sp/>in<sp/>this<sp/>driver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_Open<sp/>handle<sp/>x%X,<sp/>access<sp/>x%X,<sp/>share<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHead,<sp/>AccessCode,<sp/>ShareMode));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HACK!!!<sp/>All<sp/>users<sp/>connect<sp/>in<sp/>READ<sp/>and<sp/>WRITE<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(AccessCode<sp/>&amp;<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a1f53ceced63c655fbb4f5d4852f3f2e4" kindref="member">VGD_AC_CONFIGURATOR</ref>))</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AccessCode<sp/>|=<sp/>GENERIC_READ<sp/>|<sp/>GENERIC_WRITE;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>NULL<sp/>if<sp/>SerialInit<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_ERROR,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Open<sp/>attempted<sp/>on<sp/>uninited<sp/>device!\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AccessCode<sp/>&amp;<sp/>DEVACCESS_BUSNAMESPACE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AccessCode<sp/>&amp;=~(GENERIC_READ<sp/>|GENERIC_WRITE|GENERIC_EXECUTE|GENERIC_ALL);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>NULL<sp/>if<sp/>opening<sp/>with<sp/>access<sp/>&amp;<sp/>someone<sp/>else<sp/>already<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>0<sp/>==<sp/>(AccessCode<sp/>&amp;<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a1f53ceced63c655fbb4f5d4852f3f2e4" kindref="member">VGD_AC_CONFIGURATOR</ref>)<sp/>&amp;&amp;<sp/>(AccessCode<sp/>&amp;<sp/>(GENERIC_READ<sp/>|<sp/>GENERIC_WRITE))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_ERROR,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Open<sp/>requested<sp/>access<sp/>%x,<sp/>handle<sp/>x%X<sp/>already<sp/>has<sp/>x%X!\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AccessCode,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref>,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref>-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref>));</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_ACCESS);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>lets<sp/>allocate<sp/>an<sp/>open<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead<sp/><sp/><sp/><sp/>=<sp/><sp/>(<ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref>)LocalAlloc(LPTR,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">HW_OPEN_INFO</ref>));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pOpenHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT<sp/>|<sp/>ZONE_ERROR,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory<sp/>for<sp/>pOpenHead,<sp/>COM_Open<sp/>failed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>the<sp/>structure<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref><sp/>=<sp/>pSerialHead;<sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>back<sp/>to<sp/>our<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab4eb3fbade160c7bcc9a5d1f516b9032" kindref="member">StructUsers</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>=<sp/>AccessCode;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ac347a99835608819dca95a9e4b8b96db" kindref="member">ShareMode</ref><sp/>=<sp/>ShareMode;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref><sp/>=<sp/>CreateEvent(NULL,<sp/>FALSE,<sp/>FALSE,<sp/>NULL);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2e18d8541fe7370bbd64d2d11155f4c7" kindref="member">fEventData</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>access<sp/>permissions,<sp/>note<sp/>it<sp/>in<sp/>pSerialhead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>AccessCode<sp/>&amp;<sp/>(GENERIC_READ<sp/>|<sp/>GENERIC_WRITE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_CLOSE,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Open:<sp/>Access<sp/>permission<sp/>handle<sp/>granted<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>=<sp/>pOpenHead;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>open<sp/>entry<sp/>to<sp/>list<sp/>of<sp/>open<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>hold<sp/>the<sp/>open<sp/>CS<sp/>for<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>routine<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>of<sp/>our<sp/>state<sp/>info<sp/>is<sp/>in<sp/>flux<sp/>during<sp/>this<sp/>time.<sp/><sp/>In<sp/>particular,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>the<sp/>CS<sp/>is<sp/>would<sp/>be<sp/>possible<sp/>for<sp/>an<sp/>open<sp/>&amp;<sp/>close<sp/>to<sp/>be<sp/>going<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simultaneously<sp/>and<sp/>have<sp/>bad<sp/>things<sp/>happen<sp/>like<sp/>spinning<sp/>a<sp/>new<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread<sp/>before<sp/>the<sp/>old<sp/>one<sp/>was<sp/>gone,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>InsertHeadList(&amp;pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref>,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ae05d6d00e0c169f29a028090ad915184" kindref="member">llist</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>special<sp/>for<sp/>Power<sp/>Manger<sp/>and<sp/>Device<sp/>Manager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/><sp/>DEVACCESS_BUSNAMESPACE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>We<sp/>do<sp/>not<sp/>need<sp/>initialize<sp/>pSerailHead<sp/>and<sp/>start<sp/>any<sp/>thread.<sp/>return<sp/>the<sp/>handle<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Open<sp/>handle<sp/>x%X,<sp/>x%X,<sp/>Ref<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead,<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pOpenHead);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>port<sp/>not<sp/>yet<sp/>opened,<sp/>we<sp/>need<sp/>to<sp/>do<sp/>some<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_OPEN,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Open:<sp/>First<sp/>open<sp/>:<sp/>Do<sp/>Init<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;BindFlags<sp/>&amp;<sp/>THREAD_AT_OPEN<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_OPEN,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Open:<sp/>Starting<sp/>DispatchThread<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hook<sp/>the<sp/>interrupt<sp/>and<sp/>start<sp/>the<sp/>associated<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/><ref refid="mdd_8c_1a473e446c5f2fb98cedabe6404fc66824" kindref="member">StartDispatchThread</ref>(<sp/>pSerialHead<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>on<sp/>InterruptInitialize<sp/>or<sp/>CreateThread.<sp/><sp/>Bail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_OPEN,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Open:<sp/>Failed<sp/>StartDispatchThread<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OpenFail;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4a28f621791ed5b2f8945ea4bf7e9a79" kindref="member">RxBytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4e08c1061a980d27c3c26fce26017460" kindref="member">TxBytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a534610a756b17b98dcdd7fc935a458c5" kindref="member">TxBytesPending</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab75a4cc3fd646156fd74e1baf5dc3f69" kindref="member">DroppedBytesMDD</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1aa0896838c3e1b1617b4fa28aaeb73ae5" kindref="member">DroppedBytesPDD</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.DCBlength<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.BaudRate<sp/><sp/><sp/>=<sp/>4800;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fBinary<sp/><sp/><sp/><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fParity<sp/><sp/><sp/><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fOutxCtsFlow<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fOutxDsrFlow<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>=<sp/>DTR_CONTROL_ENABLE;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDsrSensitivity<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fTXContinueOnXoff<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fOutX<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fInX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fErrorChar<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">//NOTE:<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fNull<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">//NOTE:<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>=<sp/>RTS_CONTROL_ENABLE;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fAbortOnError<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">//NOTE:<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XonLim<sp/><sp/><sp/><sp/><sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffLim<sp/><sp/><sp/><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.ByteSize<sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.Parity<sp/><sp/><sp/><sp/><sp/>=<sp/>NOPARITY;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.StopBits<sp/><sp/><sp/>=<sp/>ONESTOPBIT;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XonChar<sp/><sp/><sp/><sp/>=<sp/><ref refid="mdd_8h_1a831e820af2c3a04cfd4ec6edc0157098" kindref="member">X_ON_CHAR</ref>;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffChar<sp/><sp/><sp/>=<sp/><ref refid="mdd_8h_1a38f12764c4db54db334bf00f5ce38f04" kindref="member">X_OFF_CHAR</ref>;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.ErrorChar<sp/><sp/>=<sp/><ref refid="mdd_8h_1ae30a37e266dacc29fac2dfb1f8fad3fd" kindref="member">ERROR_CHAR</ref>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.EofChar<sp/><sp/><sp/><sp/>=<sp/><ref refid="mdd_8h_1a04f676a7cda264701e5418e8fbbb074d" kindref="member">E_OF_CHAR</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.EvtChar<sp/><sp/><sp/><sp/>=<sp/><ref refid="mdd_8h_1af45f70b36f0a24393d7bffecbe8c1d4b" kindref="member">EVENT_CHAR</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a98720d759225609d42866faa373dce34" kindref="member">ApplyDCB</ref><sp/>(pSerialHead,<sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>),<sp/>FALSE);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWSetCommTimeouts(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWObj-&gt;pFuncTbl-&gt;HWOpen(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;HW<sp/>Open<sp/>failed.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>OpenFail;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a457ee310a66bcb363737d6565fa5ef65" kindref="member">RxEnterCS</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWPurgeComm(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>,<sp/>PURGE_RXCLEAR);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref>,<sp/>0,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a054f4f56ebe3a548d88477ccc6e07eaa" kindref="member">Length</ref><sp/>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1af20d7b7f53e9eafdb9367c86f2be92aa" kindref="member">RxResetFifo</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6a416437a9d8b47c45f602d67758e65c" kindref="member">RxLeaveCS</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWObj-&gt;BindFlags<sp/>&amp;<sp/>THREAD_IN_MDD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CeSetThreadPriority(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref>,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a66259a9f960694896fe2e851052f12f3" kindref="member">Priority256</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>++(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>we<sp/>are<sp/>finally<sp/>back<sp/>in<sp/>a<sp/>stable<sp/>state.<sp/><sp/>Release<sp/>the<sp/>CS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Open<sp/>handle<sp/>x%X,<sp/>x%X,<sp/>Ref<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead,<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pOpenHead);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>OpenFail<sp/>:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_OPEN|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Open<sp/>handle<sp/>x%X,<sp/>x%X,<sp/>Ref<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(ERROR_OPEN_FAILED);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>was<sp/>the<sp/>handle<sp/>with<sp/>access<sp/>permission,<sp/>remove<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead<sp/>==<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>Open<sp/>entry<sp/>from<sp/>the<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>RemoveEntryList(&amp;pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ae05d6d00e0c169f29a028090ad915184" kindref="member">llist</ref>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>everything<sp/>is<sp/>stable<sp/>so<sp/>release<sp/>the<sp/>critical<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>all<sp/>data<sp/>allocated<sp/>in<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree(<sp/>pOpenHead<sp/>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@doc<sp/>EXTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>COM_PreClose<sp/>|<sp/>pre-close<sp/>the<sp/>serial<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>pHead<sp/><sp/><sp/><sp/><sp/>|<sp/>Context<sp/>pointer<sp/>returned<sp/>from<sp/>COM_Open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/>TRUE<sp/>if<sp/>success;<sp/>FALSE<sp/>if<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/>This<sp/>routine<sp/>is<sp/>called<sp/>by<sp/>the<sp/>device<sp/>manager<sp/>to<sp/>close<sp/>the<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="mdd_8c_1a509c8a4ba9c45f93fb6b5894c83cbf36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mdd_8c_1a509c8a4ba9c45f93fb6b5894c83cbf36" kindref="member">COM_PreClose</ref>(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/>pOpenHead)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;!!COM_PreClose:<sp/>pSerialHead<sp/>==<sp/>NULL!!\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWObj<sp/>=<sp/>(<ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref>)pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>OpenCS<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>collide<sp/>with<sp/>an<sp/>in-progress<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>DEVACCESS_BUSNAMESPACE))<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_CLOSE,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_PreClose:<sp/>%d<sp/>users<sp/>in<sp/>MDD<sp/>functions\n\r&quot;</highlight><highlight class="normal">),pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab4eb3fbade160c7bcc9a5d1f516b9032" kindref="member">StructUsers</ref>));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>any<sp/>open<sp/>handle,<sp/>we<sp/>must<sp/>free<sp/>pending<sp/>waitcommevents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>only<sp/>for<sp/>the<sp/>handle<sp/>with<sp/>access<sp/>permissions<sp/>do<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>worry<sp/>about<sp/>read,<sp/>write,<sp/>etc<sp/>being<sp/>blocked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>(GENERIC_READ<sp/>|<sp/>GENERIC_WRITE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a73b2be619245fc55cf3e2ad11173221b" kindref="member">fAbortRead</ref>=1;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a74ad96968f1600840a067f13c553b96a" kindref="member">fAbortTransmit</ref>=1;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_CLOSE|ZONE_INIT|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_PreClose:<sp/>serial<sp/>users<sp/>to<sp/>exit,<sp/>%d<sp/>left\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab4eb3fbade160c7bcc9a5d1f516b9032" kindref="member">StructUsers</ref>));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;!!PreClose<sp/>of<sp/>non-open<sp/>serial<sp/>port\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>other<sp/>inits/opens<sp/>can<sp/>go<sp/>ahead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_PreClose\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@doc<sp/>EXTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>COM_Close<sp/>|<sp/>close<sp/>the<sp/>serial<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>pHead<sp/><sp/><sp/><sp/><sp/>|<sp/>Context<sp/>pointer<sp/>returned<sp/>from<sp/>COM_Open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/>TRUE<sp/>if<sp/>success;<sp/>FALSE<sp/>if<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/>This<sp/>routine<sp/>is<sp/>called<sp/>by<sp/>the<sp/>device<sp/>manager<sp/>to<sp/>close<sp/>the<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1082" refid="mdd_8c_1a3211f3ac6ab813c78c4f220dacc4dfb4" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a3211f3ac6ab813c78c4f220dacc4dfb4" kindref="member">COM_Close</ref>(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/>pOpenHead)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetCode<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_Close\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;!!COM_Close:<sp/>pSerialHead<sp/>==<sp/>NULL!!\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWObj<sp/>=<sp/>(<ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref>)pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>OpenCS<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>collide<sp/>with<sp/>an<sp/>in-progress<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>special<sp/>for<sp/>Power<sp/>Manger<sp/>and<sp/>Device<sp/>Manager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>DEVACCESS_BUSNAMESPACE)<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>entry<sp/>from<sp/>the<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveEntryList(&amp;pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ae05d6d00e0c169f29a028090ad915184" kindref="member">llist</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>all<sp/>data<sp/>allocated<sp/>in<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(<sp/>pOpenHead<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(1,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Close:<sp/>(%d<sp/>handles)<sp/>total<sp/>RX<sp/>%d,<sp/>total<sp/>TX<sp/>%d,<sp/>dropped<sp/>(mdd,<sp/>pdd)<sp/>%d,%d\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4a28f621791ed5b2f8945ea4bf7e9a79" kindref="member">RxBytes</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4e08c1061a980d27c3c26fce26017460" kindref="member">TxBytes</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab75a4cc3fd646156fd74e1baf5dc3f69" kindref="member">DroppedBytesMDD</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1aa0896838c3e1b1617b4fa28aaeb73ae5" kindref="member">DroppedBytesPDD</ref>));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>multi<sp/>open<sp/>case,<sp/>do<sp/>we<sp/>need<sp/>to<sp/>restore<sp/>state<sp/>later<sp/>on<sp/>or<sp/>something????</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWObj<sp/>&amp;&amp;<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>==0<sp/>&amp;&amp;<sp/>(pHWObj-&gt;BindFlags<sp/>&amp;<sp/>THREAD_IN_MDD)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetThreadPriority(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a5d7ab14bd3742d59b2f49638e5a35d75" kindref="member">pDispatchThread</ref>,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THREAD_PRIORITY_NORMAL);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>closing<sp/>the<sp/>last<sp/>open<sp/>handle,<sp/>then<sp/>close<sp/>PDD<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>call<sp/>HWClose\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWObj<sp/>)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWClose(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Returned<sp/>from<sp/>HWClose\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>if<sp/>thread<sp/>was<sp/>spun<sp/>in<sp/>open,<sp/>kill<sp/>it<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;BindFlags<sp/>&amp;<sp/>THREAD_AT_OPEN<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Close<sp/>:<sp/>Stopping<sp/>Dispatch<sp/>Thread\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1af34affd078dccc7352d0116ec32dfccf" kindref="member">StopDispatchThread</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>was<sp/>the<sp/>handle<sp/>with<sp/>access<sp/>permission,<sp/>remove<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead<sp/>==<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_INIT|ZONE_CLOSE,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Close:<sp/>Closed<sp/>access<sp/>owner<sp/>handle\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af87a86713500c44143ba5a7e192b3633" kindref="member">pAccessOwner</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>entry<sp/>from<sp/>the<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveEntryList(&amp;pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ae05d6d00e0c169f29a028090ad915184" kindref="member">llist</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>all<sp/>data<sp/>allocated<sp/>in<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(<sp/>pOpenHead<sp/>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;!!Close<sp/>of<sp/>non-open<sp/>serial<sp/>port\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetCode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>other<sp/>inits/opens<sp/>can<sp/>go<sp/>ahead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Close\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(RetCode);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Routine<sp/>to<sp/>handle<sp/>the<sp/>PROCESS_EXITING<sp/>flag.<sp/><sp/>Should<sp/>let<sp/>free<sp/>any<sp/>threads<sp/>blocked<sp/>on<sp/>pOpenHead,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>they<sp/>can<sp/>be<sp/>killed<sp/>and<sp/>the<sp/>process<sp/>closed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1179" refid="mdd_8c_1a74ffd644f82cdecda1fdab7d892d59ee" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a74ffd644f82cdecda1fdab7d892d59ee" kindref="member">ProcessExiting</ref>(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/>pOpenHead)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PHWOBJ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetCode<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+ProcessExiting\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;!!ProcessExiting:<sp/>pSerialHead<sp/>==<sp/>NULL!!\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a509c8a4ba9c45f93fb6b5894c83cbf36" kindref="member">COM_PreClose</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_CLOSE|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-ProcessExiting\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>COM_PreDeinit<sp/>|<sp/>Pre-De-initialize<sp/>serial<sp/>port.</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/>@parm<sp/>DWORD<sp/>|<sp/>pSerialHead<sp/>|<sp/>Context<sp/>pointer<sp/>returned<sp/>from<sp/>COM_Init</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/>@rdesc<sp/>None.</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1207" refid="mdd_8c_1afc1e63c9b24663266425178f0acfbaec" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1afc1e63c9b24663266425178f0acfbaec" kindref="member">COM_PreDeinit</ref>(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/>pSerialHead)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_PreDeinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>do<sp/>much<sp/>without<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_PreDeinit<sp/>can&apos;t<sp/>find<sp/>pSerialHead\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Call<sp/>PreClose,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>user.<sp/><sp/>Note<sp/>that<sp/>this<sp/>call<sp/>will<sp/>ensure<sp/>that</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>all<sp/>users<sp/>are<sp/>out<sp/>of<sp/>the<sp/>serial<sp/>routines<sp/>before<sp/>it<sp/>returns.</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLIST_ENTRY<sp/><sp/><sp/><sp/><sp/>pEntry;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref>.Flink;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pEntry<sp/>!=<sp/>&amp;pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead<sp/>=<sp/>CONTAINING_RECORD(<sp/>pEntry,<sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">HW_OPEN_INFO</ref>,<sp/>llist);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pEntry-&gt;Flink;<sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_CLOSE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>PreDeinit<sp/>-Pre<sp/>Closing<sp/>Handle<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead<sp/>));</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a509c8a4ba9c45f93fb6b5894c83cbf36" kindref="member">COM_PreClose</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_PreDeinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>COM_Deinit<sp/>|<sp/>De-initialize<sp/>serial<sp/>port.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>@parm<sp/>DWORD<sp/>|<sp/>pSerialHead<sp/>|<sp/>Context<sp/>pointer<sp/>returned<sp/>from<sp/>COM_Init</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>@rdesc<sp/>None.</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1249" refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1af7fb7fc1afe81afbead798a1765e4dca" kindref="member">COM_Deinit</ref>(<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/>pSerialHead)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_Deinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>do<sp/>much<sp/>without<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Deinit<sp/>can&apos;t<sp/>find<sp/>pSerialHead\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>an<sp/>interrupt<sp/>handler<sp/>thread,<sp/>kill<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;BindFlags<sp/>&amp;<sp/>THREAD_IN_MDD<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1af34affd078dccc7352d0116ec32dfccf" kindref="member">StopDispatchThread</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Call<sp/>close,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>user.<sp/><sp/>Note<sp/>that<sp/>this<sp/>call<sp/>will<sp/>ensure<sp/>that</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>all<sp/>users<sp/>are<sp/>out<sp/>of<sp/>the<sp/>serial<sp/>routines<sp/>before<sp/>it<sp/>returns,<sp/>so<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>go<sp/>ahead<sp/>and<sp/>free<sp/>our<sp/>internal<sp/>memory.</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLIST_ENTRY<sp/><sp/><sp/><sp/><sp/>pEntry;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref>.Flink;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pEntry<sp/>!=<sp/>&amp;pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead<sp/>=<sp/>CONTAINING_RECORD(<sp/>pEntry,<sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">HW_OPEN_INFO</ref>,<sp/>llist);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pEntry-&gt;Flink;<sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT<sp/>|<sp/>ZONE_CLOSE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Deinit<sp/>-<sp/>Closing<sp/>Handle<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead<sp/>));</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a3211f3ac6ab813c78c4f220dacc4dfb4" kindref="member">COM_Close</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>our<sp/>resources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a600ddee038a53683a8f31febf646c40a" kindref="member">hSerialEvent</ref>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref><sp/>)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af37114c30f90dedfa3fc9abb08ddbc6d" kindref="member">hKillDispatchThread</ref>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref><sp/>)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref>);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af0c3a1ddf755418037899b51258b1a73" kindref="member">ReceiveCritSec1</ref>));</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>));</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a0a0b8480e8876c789be53c3f9886d221" kindref="member">CS</ref>));</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>));</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>DeleteCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9582c736567344aaeee840e997e833fe" kindref="member">OpenCS</ref>));</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>call<sp/>HW<sp/>specific<sp/>deinit<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref><sp/>&amp;&amp;<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref><sp/>&amp;&amp;<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>call<sp/>HWDeinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl-&gt;HWDeinit(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Returned<sp/>from<sp/>HWDeinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree(pSerialHead);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_INIT|ZONE_FUNCTION,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_Deinit\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/>@func<sp/><sp/><sp/><sp/>ULONG<sp/>|<sp/>COM_Read<sp/>|<sp/>Allows<sp/>application<sp/>to<sp/>receive<sp/>characters<sp/>from</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>serial<sp/>port.<sp/>This<sp/>routine<sp/>sets<sp/>the<sp/>buffer<sp/>and<sp/>bufferlength<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>by<sp/>the<sp/>reading<sp/>thread.<sp/>It<sp/>also<sp/>enables<sp/>reception<sp/>and<sp/>controlling<sp/>when</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>to<sp/>return<sp/>to<sp/>the<sp/>user.<sp/>It<sp/>writes<sp/>to<sp/>the<sp/>referent<sp/>of<sp/>the<sp/>fourth<sp/>argument</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>transacted.<sp/>It<sp/>returns<sp/>the<sp/>status<sp/>of<sp/>the<sp/>call.</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/><sp/><sp/>@rdesc<sp/>This<sp/>routine<sp/>returns:<sp/>-1<sp/>if<sp/>error,<sp/>or<sp/>number<sp/>of<sp/>bytes<sp/>read.</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal">ULONG</highlight></codeline>
<codeline lineno="1333" refid="mdd_8c_1af995ebc898697a3a4d52259c3a692d0d" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1af995ebc898697a3a4d52259c3a692d0d" kindref="member">COM_Read</ref>(</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/>pHead,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@parm<sp/>[IN]<sp/><sp/><sp/><sp/><sp/>HANDLE<sp/>returned<sp/>by<sp/>COM_Open<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUCHAR<sp/><sp/><sp/><sp/><sp/><sp/>pTargetBuffer,<sp/><sp/></highlight><highlight class="comment">//@parm<sp/>[IN,OUT]<sp/>Pointer<sp/>to<sp/>valid<sp/>memory.<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufferLength<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@parm<sp/>[IN]<sp/><sp/><sp/><sp/><sp/>Size<sp/>in<sp/>bytes<sp/>of<sp/>pTargetBuffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead<sp/>=<sp/>(<ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead;</highlight><highlight class="comment">//<sp/>=<sp/>pOpenHead-&gt;pSerialHead;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>PHW_VTBL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl;</highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pSerialHead-&gt;pHWObj-&gt;pFuncTbl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/>;</highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pSerialHead-&gt;pHWHead;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ticks;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntervalTimeout;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>interval<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddIntervalTimeout;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalTimeout;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Total<sp/>Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeSpent<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>much<sp/>time<sp/>have<sp/>we<sp/>been<sp/>waiting?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_READ(0x%X,0x%X,%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHead,<sp/>pTargetBuffer,<sp/>BufferLength));</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOpenHead==NULL)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_ERROR,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_READ,<sp/>Wrong<sp/>Handle\r\n&quot;</highlight><highlight class="normal">)<sp/>));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>that<sp/>the<sp/>call<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>||<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_READ,<sp/>device<sp/>not<sp/>open\r\n&quot;</highlight><highlight class="normal">)<sp/>));</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>pFuncTbl<sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>-&gt;pFuncTbl;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Read<sp/>-<sp/>RxBuffRead:<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="mdd_8h_1a81a09844cd54f443376fb7cff3d97587" kindref="member">RxBuffRead</ref>(pSerialHead)));</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caller<sp/>has<sp/>access<sp/>permissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>GENERIC_READ)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_USR_READ|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Read:<sp/>Access<sp/>permission<sp/>failure<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref>));</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_ACCESS);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsBadWritePtr(pTargetBuffer,<sp/>BufferLength)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BytesRead<sp/>=<sp/>(ULONG)-1;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_PARAMETER);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab0796fe82ce9bc7a1146ec818219d226" kindref="member">COM_INC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Practice<sp/>safe<sp/>threading.</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af0c3a1ddf755418037899b51258b1a73" kindref="member">ReceiveCritSec1</ref>));</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a73b2be619245fc55cf3e2ad11173221b" kindref="member">fAbortRead</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>total<sp/>time<sp/>to<sp/>wait.<sp/>Take<sp/>product<sp/>and<sp/>add<sp/>constant.</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>MAXDWORD<sp/>!=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutMultiplier<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalTimeout<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutMultiplier*BufferLength<sp/>+</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutConstant;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>using<sp/>FIFO<sp/>and<sp/>water<sp/>level<sp/>is<sp/>set<sp/>to<sp/>8,<sp/>we<sp/>have<sp/>to<sp/>do<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddIntervalTimeout=pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutMultiplier*8;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalTimeout<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutConstant;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddIntervalTimeout=0;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>IntervalTimeout<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadIntervalTimeout;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((IntervalTimeout<sp/>&lt;<sp/>MAXDWORD<sp/><sp/>-<sp/>AddIntervalTimeout)<sp/>&amp;&amp;<sp/>(IntervalTimeout<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntervalTimeout<sp/>+=AddIntervalTimeout;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;TotalTimeout:%d\r\n&quot;</highlight><highlight class="normal">),<sp/>TotalTimeout));</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>BufferLength<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Top<sp/>of<sp/>Loop<sp/>Fifo(R=%d,W=%d,L=%d,BA=%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead),<sp/><ref refid="mdd_8h_1a2d2c67763e56ea58c18d8b47719e5275" kindref="member">RxWrite</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)));</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a457ee310a66bcb363737d6565fa5ef65" kindref="member">RxEnterCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>data<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>only<sp/>copies<sp/>the<sp/>continous<sp/>portion,<sp/>This<sp/>will<sp/>cause<sp/>a<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>receive<sp/>data<sp/>spans<sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len<sp/>=<sp/><ref refid="mdd_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead),</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)-<ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead));</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Len<sp/>=<sp/><ref refid="mdd_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(Len,<sp/>BufferLength);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>copy<sp/>%d<sp/>bytes\r\n&quot;</highlight><highlight class="normal">),<sp/>Len));</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(pTargetBuffer,<sp/><ref refid="mdd_8h_1a81a09844cd54f443376fb7cff3d97587" kindref="member">RxBuffRead</ref>(pSerialHead),<sp/>Len);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>Fifo<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead)<sp/>=<sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead)+<sp/>Len&lt;<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)?<sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead)+Len:<sp/><ref refid="mdd_8h_1a989a3317ba81a2172cc4ee6b9d84073b" kindref="member">RxRead</ref>(pSerialHead)+Len-<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead));</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>all<sp/>the<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufferLength<sp/>-=<sp/>Len;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTargetBuffer<sp/>+=<sp/>Len;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BytesRead<sp/>+=<sp/>Len;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6a416437a9d8b47c45f602d67758e65c" kindref="member">RxLeaveCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>a<sp/>serial<sp/>event?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IntervalTimeout<sp/>==<sp/>MAXDWORD){<sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>Case<sp/>see<sp/>Remarks<sp/>of<sp/>COMMTIMEOUTS<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TotalTimeout<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>some<sp/>reason<sp/>this<sp/>means<sp/>don&apos;t<sp/>wait.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BytesRead!=0)<sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>data<sp/>in<sp/>the<sp/>buffer<sp/>or<sp/>has<sp/>been<sp/>readed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout=(TotalTimeout!=0?TotalTimeout:MAXDWORD);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>timeout<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>TimeSpent<sp/>&gt;=<sp/>Timeout<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timed<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout<sp/>-=<sp/>TimeSpent;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>first<sp/>byte<sp/>we<sp/>only<sp/>use<sp/>interval<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>subsequent<sp/>we<sp/>use<sp/>minimum<sp/>of<sp/>Interval<sp/>and<sp/>Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>BytesRead)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/><ref refid="mdd_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(Timeout,<sp/>(IntervalTimeout!=0?IntervalTimeout:MAXDWORD));</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ticks<sp/>=<sp/>GetTickCount();</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;About<sp/>to<sp/>wait<sp/>%dms\r\n&quot;</highlight><highlight class="normal">),<sp/>Timeout));</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WAIT_TIMEOUT<sp/>==<sp/>WaitForSingleObject(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref>,<sp/>Timeout<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>ticks<sp/>is<sp/>a<sp/>ULONG<sp/>this<sp/>handles<sp/>wrap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ticks<sp/>=<sp/>GetTickCount()<sp/>-<sp/>Ticks;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeSpent<sp/>+=<sp/>Ticks;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>absense<sp/>of<sp/>WaitForMultipleObjects,<sp/>we<sp/>use<sp/>flags<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>errors/aborts.<sp/>Check<sp/>for<sp/>aborts<sp/>or<sp/>asynchronous<sp/>closes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a73b2be619245fc55cf3e2ad11173221b" kindref="member">fAbortRead</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_USR_READ,(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Read<sp/>-<sp/>Aborting<sp/>read\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_USR_READ|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Read<sp/>-<sp/>device<sp/>was<sp/>closed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>below<sp/>the<sp/>SW<sp/>flow<sp/>control<sp/>limits?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fInX<sp/>&amp;&amp;<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XoffLim<sp/>&lt;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)<sp/>-<sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/>pHWObj<sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Sending<sp/>XON\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fTXContinueOnXoff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj-&gt;pFuncTbl-&gt;HWXmitComChar(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>,</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XonChar);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>below<sp/>the<sp/>HW<sp/>flow<sp/>control<sp/>limits?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>2*<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pSerialHead)<sp/>&lt;<sp/><ref refid="mdd_8h_1a25b822c8214a4d4c505ea766017928c7" kindref="member">RxLength</ref>(pSerialHead)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>buffer<sp/>is<sp/>less<sp/>then<sp/>1/2<sp/>full<sp/>we<sp/>set<sp/>RTS/DTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_HANDSHAKE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RTS_CONTROL_HANDSHAKE<sp/>Setting<sp/>RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetRTS(pHWHead);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_HANDSHAKE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DTR_CONTROL_HANDSHAKE<sp/>Setting<sp/>DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetDTR(pHWHead);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;ReceiveBytes<sp/>exiting\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af0c3a1ddf755418037899b51258b1a73" kindref="member">ReceiveCritSec1</ref>));</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_USR_READ|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_READ:<sp/>returning<sp/>%d<sp/>(total<sp/>%d,<sp/>dropped<sp/>%d,%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BytesRead,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a4a28f621791ed5b2f8945ea4bf7e9a79" kindref="member">RxBytes</ref>,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab75a4cc3fd646156fd74e1baf5dc3f69" kindref="member">DroppedBytesMDD</ref>,pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1aa0896838c3e1b1617b4fa28aaeb73ae5" kindref="member">DroppedBytesPDD</ref>));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a5297f1634cd352c1d1405ae209389c7d" kindref="member">COM_DEC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(BytesRead);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/>@func<sp/>ULONG<sp/>|<sp/>COM_Write<sp/>|<sp/>Allows<sp/>application<sp/>to<sp/>transmit<sp/>bytes<sp/>to<sp/>the<sp/>serial<sp/>port.<sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/>@rdesc<sp/>It<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>written<sp/>or<sp/>-1<sp/>if<sp/>error.</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal">ULONG</highlight></codeline>
<codeline lineno="1547" refid="mdd_8c_1af9afc47fd5c204fb4fcc426315010173" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1af9afc47fd5c204fb4fcc426315010173" kindref="member">COM_Write</ref>(HANDLE<sp/>pHead,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>[IN]<sp/><sp/>HANDLE<sp/>returned<sp/>by<sp/>COM_Open.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUCHAR<sp/>pSourceBytes,<sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>[IN]<sp/><sp/>Pointer<sp/>to<sp/>bytes<sp/>to<sp/>be<sp/>written.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ULONG<sp/><sp/>NumberOfBytes<sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>[IN]<sp/><sp/>Number<sp/>of<sp/>bytes<sp/>to<sp/>be<sp/>written.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead<sp/>=<sp/>(<ref refid="mdd_8h_1a0b2d0eaf22a1ef6e11edbfe9868d5d89" kindref="member">PHW_OPEN_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pSerialHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BytesWritten<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalWritten<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>PHW_VTBL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TotalTimeout;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Total<sp/>Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Timeout<sp/>value<sp/>actually<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitReturn;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_WRITE(0x%X,<sp/>0x%X,<sp/>%d)\r\n&quot;</highlight><highlight class="normal">),<sp/>pHead,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSourceBytes,<sp/>NumberOfBytes));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>validity<sp/>of<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead<sp/>||<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_WRITE,<sp/>device<sp/>not<sp/>open\r\n&quot;</highlight><highlight class="normal">)<sp/>));</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caller<sp/>has<sp/>access<sp/>permissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>GENERIC_WRITE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_USR_READ|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write:<sp/>Access<sp/>permission<sp/>failure<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref>));</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_ACCESS);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>IsBadReadPtr(pSourceBytes,<sp/>NumberOfBytes)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_WRITE,<sp/>bad<sp/>read<sp/>pointer\r\n&quot;</highlight><highlight class="normal">)<sp/>));</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab0796fe82ce9bc7a1146ec818219d226" kindref="member">COM_INC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>pFuncTbl<sp/>=<sp/>pHWObj-&gt;pFuncTbl;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>out<sp/>other<sp/>threads<sp/>from<sp/>messing<sp/>with<sp/>these<sp/>pointers.</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>wait<sp/>for<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>)));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>));</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>Got<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>)));</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>wait<sp/>for<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a472e933fda22c512633461c3e6c4accd" kindref="member">TxEnterCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>got<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a74ad96968f1600840a067f13c553b96a" kindref="member">fAbortTransmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>any<sp/>pending<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>WaitForSingleObject(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>,0);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a9dc9ed79720fe74eb08f637d5a000fc2" kindref="member">Permissions</ref><sp/>=<sp/>GetCurrentPermissions();</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1af00f0a0d0bebd5b410bad453109b5415" kindref="member">TxCharBuffer</ref><sp/>=<sp/>pSourceBytes;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1abe41a3f81c7e5b95a7de954ea55ec31c" kindref="member">Length</ref><sp/>=<sp/>NumberOfBytes;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab7d5a5cbc927b6c8505c746c0e58d5a4" kindref="member">TxBytesSent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a534610a756b17b98dcdd7fc935a458c5" kindref="member">TxBytesPending</ref><sp/>=<sp/>NumberOfBytes;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>an<sp/>event<sp/>isn&apos;t<sp/>hanging<sp/>around<sp/>from<sp/>a<sp/>previous<sp/>write<sp/>time<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetEvent(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref><sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab5b1dbcd96eb9c181724373574422eb7" kindref="member">TxLeaveCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>released<sp/>CritSec:<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>call<sp/>the<sp/>same<sp/>write<sp/>routine<sp/>that<sp/>a<sp/>TX_INTR<sp/>does.<sp/><sp/>It<sp/>queus<sp/>as<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>much<sp/>data<sp/>as<sp/>possible,<sp/>then<sp/>returns.<sp/><sp/>From<sp/>then<sp/>on,<sp/>the<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interrupt<sp/>mechanism<sp/>kicks<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a572cdc024bb40a76c8d2b445aaec7919" kindref="member">DoTxData</ref>(<sp/>pSerialHead<sp/>);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalTimeout<sp/>=<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutMultiplier*NumberOfBytes<sp/>+</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutConstant;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!TotalTimeout<sp/>)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/>INFINITE;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/>TotalTimeout;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>wait<sp/>for<sp/>transmission<sp/>complete<sp/>event<sp/>%x,<sp/>timeout:<sp/>%d<sp/>msec.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>,<sp/>Timeout));</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>WaitReturn<sp/>=<sp/>WaitForSingleObject<sp/>(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>,<sp/>Timeout);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>absense<sp/>of<sp/>WaitForMultipleObjects,<sp/>we<sp/>use<sp/>flags<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>errors/aborts.<sp/>Check<sp/>for<sp/>aborts<sp/>or<sp/>asynchronous<sp/>closes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a74ad96968f1600840a067f13c553b96a" kindref="member">fAbortTransmit</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_USR_READ,(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>-<sp/>Aborting<sp/>write\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>LEAVEWRITE;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_WRITE|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>-<sp/>device<sp/>was<sp/>closed\n\r&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>LEAVEWRITE;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>WAIT_TIMEOUT<sp/>==<sp/>WaitReturn<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WARN,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Write<sp/>timeout<sp/>%d,<sp/>%d\r\n&quot;</highlight><highlight class="normal">),<sp/>NumberOfBytes,<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a534610a756b17b98dcdd7fc935a458c5" kindref="member">TxBytesPending</ref>));</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>completed<sp/>normally.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>LEAVEWRITE:</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regardless<sp/>of<sp/>timeout,<sp/>we<sp/>need<sp/>to<sp/>clear<sp/>the<sp/>TxBufferInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>ISR<sp/>from<sp/>possibly<sp/>coming<sp/>around<sp/>and<sp/>trying<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>buffer<sp/>after<sp/>we<sp/>have<sp/>returned<sp/>to<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>wait<sp/>for<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a472e933fda22c512633461c3e6c4accd" kindref="member">TxEnterCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>got<sp/>CritSec<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a9dc9ed79720fe74eb08f637d5a000fc2" kindref="member">Permissions</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1af00f0a0d0bebd5b410bad453109b5415" kindref="member">TxCharBuffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1abe41a3f81c7e5b95a7de954ea55ec31c" kindref="member">Length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a534610a756b17b98dcdd7fc935a458c5" kindref="member">TxBytesPending</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ad9b20f022e4ec7f244fbef504800f9cf" kindref="member">TxRead</ref>(pSerialHead)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab5b1dbcd96eb9c181724373574422eb7" kindref="member">TxLeaveCS</ref>(pSerialHead);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>released<sp/>CritSec:<sp/>%x.\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a206fcd2c1f7aface39164ee22c322389" kindref="member">TxBufferInfo</ref>.<ref refid="struct_____t_x___b_u_f_f_e_r___i_n_f_o_1a997ab1a728309d99a7281c6f8c271720" kindref="member">CS</ref>)));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>));</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Write<sp/>released<sp/>CritSec:<sp/>%x.<sp/>Exiting\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab6af9eef8012ccf68e85081af200cdd2" kindref="member">TransmitCritSec1</ref>)));</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>the<sp/>Transmitter<sp/>has<sp/>gone<sp/>empty.</highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a571d953667eebf399462c0b8df34aad5" kindref="member">EvaluateEventFlag</ref>(pSerialHead,<sp/>EV_TXEMPTY);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_TOGGLE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearRTS(pHWHead);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a5297f1634cd352c1d1405ae209389c7d" kindref="member">COM_DEC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_WRITE|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_WRITE,<sp/>returning<sp/>%d\n\r&quot;</highlight><highlight class="normal">),pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab7d5a5cbc927b6c8505c746c0e58d5a4" kindref="member">TxBytesSent</ref>));</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pSerialHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab7d5a5cbc927b6c8505c746c0e58d5a4" kindref="member">TxBytesSent</ref>);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal">ULONG</highlight></codeline>
<codeline lineno="1714" refid="mdd_8c_1a1787b5f4bf3efd393cb5e65c289f3fca" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a1787b5f4bf3efd393cb5e65c289f3fca" kindref="member">COM_Seek</ref>(</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/>pHead,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LONG<sp/><sp/><sp/><sp/>Position,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/>Type</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ULONG)-1;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>COM_PowerUp<sp/>|<sp/>Turn<sp/>power<sp/>on<sp/>to<sp/>serial<sp/>device</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/>*<sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/>@rdesc<sp/>This<sp/>routine<sp/>returns<sp/>a<sp/>status<sp/>of<sp/>1<sp/>if<sp/>unsuccessful<sp/>and<sp/>0<sp/>otherwise.</highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1730" refid="mdd_8c_1acb280ad657824056998efd00d4e12726" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1acb280ad657824056998efd00d4e12726" kindref="member">COM_PowerUp</ref>(</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/>pHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>Handle<sp/>to<sp/>device.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pHWIHead<sp/><sp/><sp/><sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pHWIHead)<sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/>=<sp/>(<ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref>)pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pHWObj)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pHWObj-&gt;pFuncTbl-&gt;HWPowerOn(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>));</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>COM_PowerDown<sp/>|<sp/>Turns<sp/>off<sp/>power<sp/>to<sp/>serial<sp/>device.</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/>*<sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/>@rdesc<sp/>This<sp/>routine<sp/>returns<sp/>a<sp/>status<sp/>of<sp/>1<sp/>if<sp/>unsuccessful<sp/>and<sp/>0<sp/>otherwise.</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1752" refid="mdd_8c_1a2378521e1ebe1198b80864f78be2d737" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a2378521e1ebe1198b80864f78be2d737" kindref="member">COM_PowerDown</ref>(</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/>pHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>Handle<sp/>to<sp/>device.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead<sp/><sp/><sp/><sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/>pHWObj<sp/>=<sp/>(<ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref>)pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>pHWObj)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pHWObj-&gt;pFuncTbl-&gt;HWPowerOff(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>));</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/>@func<sp/><sp/>ULONG<sp/>|<sp/>SerialGetDroppedByteNumber<sp/>|<sp/>Returns<sp/>Number<sp/>of<sp/>dropped<sp/>bytes.</highlight></codeline>
<codeline lineno="1771"><highlight class="comment"><sp/>*<sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/>@rdesc<sp/>Returns<sp/>the<sp/>ULONG<sp/>representing<sp/>the<sp/>number<sp/>of<sp/>dropped<sp/>bytes.</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal">ULONG</highlight></codeline>
<codeline lineno="1775" refid="mdd_8c_1af8568919b09fd84906c23b998644e148" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1af8568919b09fd84906c23b998644e148" kindref="member">SerialGetDroppedByteNumber</ref>(</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/>pHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*@parm<sp/>Handle<sp/>to<sp/>device.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead<sp/><sp/><sp/><sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ab75a4cc3fd646156fd74e1baf5dc3f69" kindref="member">DroppedBytesMDD</ref>+pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1aa0896838c3e1b1617b4fa28aaeb73ae5" kindref="member">DroppedBytesPDD</ref>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>@doc<sp/>INTERNAL</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>@func<sp/><sp/>BOOL<sp/>|<sp/>WaitCommEvent<sp/>|<sp/>See<sp/>Win32<sp/>documentation.</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*<sp/>Exported<sp/>to<sp/>users.</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">WINAPI</highlight></codeline>
<codeline lineno="1795" refid="mdd_8c_1aee4ef1416739c614723a09a93ca3cbd1" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1aee4ef1416739c614723a09a93ca3cbd1" kindref="member">WaitCommEvent</ref>(</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>Handle<sp/>to<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfdwEventMask,<sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>Pointer<sp/>to<sp/>ULONG<sp/>to<sp/>receive<sp/>CommEvents.fEventMask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPOVERLAPPED<sp/><sp/><sp/><sp/>Unused<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@parm<sp/>Pointer<sp/>to<sp/>OVERLAPPED<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pHWIHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwEventData;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_FUNCTION|ZONE_EVENTS,(TEXT(</highlight><highlight class="stringliteral">&quot;+WaitCommEvent<sp/>x%X<sp/>x%X,<sp/>pMask<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead,<sp/>pHWIHead<sp/>,<sp/>pfdwEventMask));</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead<sp/>||<sp/>!pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR|ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-WaitCommEvent<sp/>-<sp/>device<sp/>not<sp/>open<sp/>(x%X,<sp/>%d)<sp/>\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead,<sp/>(pHWIHead<sp/>==<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref>));</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>return<sp/>immediately<sp/>if<sp/>mask<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR|ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-WaitCommEvent<sp/>-<sp/>Mask<sp/>already<sp/>clear\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab0796fe82ce9bc7a1146ec818219d226" kindref="member">COM_INC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort<sp/>should<sp/>only<sp/>affect<sp/>us<sp/>once<sp/>we<sp/>start<sp/>waiting.<sp/><sp/>Ignore<sp/>any<sp/>old<sp/>aborts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>and<sp/>clear<sp/>any<sp/>event<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResetEvent(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwEventData<sp/>=<sp/>InterlockedExchange(<sp/>&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2e18d8541fe7370bbd64d2d11155f4c7" kindref="member">fEventData</ref>),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>WaitCommEvent<sp/>-<sp/>Events<sp/>0x%X,<sp/>Mask<sp/>0x%X,<sp/>Abort<sp/>%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwEventData,</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>,</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>));</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>we<sp/>got<sp/>any<sp/>events<sp/>of<sp/>interest<sp/>or<sp/>mask<sp/>is<sp/>reset<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwEventData<sp/>&amp;<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>)<sp/>!=<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask<sp/>=<sp/>dwEventData<sp/>&amp;<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>an<sp/>event<sp/>from<sp/>PDD,<sp/>or<sp/>from<sp/>SetCommMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitForSingleObject(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>,</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ULONG)-1);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>return<sp/>immediately<sp/>if<sp/>mask<sp/>was<sp/>set<sp/>via<sp/>SetCommMask.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>have<sp/>been<sp/>terminated<sp/>by<sp/>SetCommMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>TRUE<sp/>with<sp/>a<sp/>mask<sp/>of<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_ERROR|ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>WaitCommEvent<sp/>-<sp/>Mask<sp/>was<sp/>cleared\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a5297f1634cd352c1d1405ae209389c7d" kindref="member">COM_DEC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>and<sp/>see<sp/>if<sp/>device<sp/>was<sp/>closed<sp/>while<sp/>we<sp/>were<sp/>waiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Device<sp/>was<sp/>closed.<sp/><sp/>Get<sp/>out<sp/>of<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-WaitCommEvent<sp/>-<sp/>device<sp/>was<sp/>closed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>either<sp/>got<sp/>an<sp/>event<sp/>or<sp/>a<sp/>SetCommMask<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-WaitCommEvent<sp/>-<sp/>*pfdwEventMask<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfdwEventMask));</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(TRUE);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>****************************************************************</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*<sp/><sp/>Win32<sp/>Comm<sp/>Api<sp/>Support<sp/>follows.</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*<sp/><sp/>@doc<sp/>EXTERNAL</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/>VOID<sp/>|<sp/>EvaluateEventFlag<sp/>|<sp/>Evaluate<sp/>an<sp/>event<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PHW_INDEP_INFO<sp/><sp/><sp/><sp/>|<sp/>pHWIHead<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>MDD<sp/>context<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>ULONG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>fdwEventMask<sp/><sp/>|<sp/>Bitmask<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/>No<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/>This<sp/>function<sp/>is<sp/>called<sp/>by<sp/>the<sp/>PDD<sp/>(and<sp/>internally<sp/>in<sp/>the<sp/>MDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>evaluate<sp/>a<sp/>COMM<sp/>event.<sp/><sp/>If<sp/>the<sp/>user<sp/>is<sp/>waiting<sp/>for<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMM<sp/>event<sp/>(see<sp/>WaitCommEvent())<sp/>then<sp/>it<sp/>will<sp/>signal<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>users<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal">VOID</highlight></codeline>
<codeline lineno="1905" refid="mdd_8c_1a571d953667eebf399462c0b8df34aad5" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a571d953667eebf399462c0b8df34aad5" kindref="member">EvaluateEventFlag</ref>(PVOID<sp/>pHead,<sp/>ULONG<sp/>fdwEventMask)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pHWIHead<sp/>=<sp/>(<ref refid="mdd_8h_1a7d937545f35a0713652a4face372a53d" kindref="member">PHW_INDEP_INFO</ref>)pHead;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>PLIST_ENTRY<sp/><sp/><sp/><sp/><sp/>pEntry;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pOpenHead;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwTmpEvent,<sp/>dwOrigEvent;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRetCode;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS|ZONE_ERROR,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>EvaluateEventFlag<sp/>(eventMask<sp/>=<sp/>0x%x)<sp/>-<sp/>device<sp/>was<sp/>closed\r\n&quot;</highlight><highlight class="normal">),fdwEventMask));</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>CommEvent<sp/>-<sp/>Event<sp/>0x%X,<sp/>Global<sp/>Mask<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdwEventMask,</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a1f707f4702fc89cf2b46876e4c44f0bc" kindref="member">fEventMask</ref>));</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>support<sp/>multiple<sp/>opens,<sp/>we<sp/>must<sp/>check<sp/>mask<sp/>for<sp/>each<sp/>open<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>keep<sp/>this<sp/>relatively<sp/>painless,<sp/>we<sp/>keep<sp/>a<sp/>per-device<sp/>mask<sp/>which<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitwise<sp/>or<sp/>of<sp/>each<sp/>current<sp/>open<sp/>mask.<sp/><sp/>We<sp/>can<sp/>check<sp/>this<sp/>first<sp/>before<sp/>doing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>linked<sp/>list<sp/>work<sp/>to<sp/>figure<sp/>out<sp/>who<sp/>to<sp/>notify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a1f707f4702fc89cf2b46876e4c44f0bc" kindref="member">fEventMask</ref><sp/>&amp;<sp/>fdwEventMask<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref>.Flink;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pEntry<sp/>!=<sp/>&amp;pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead<sp/>=<sp/>CONTAINING_RECORD(<sp/>pEntry,<sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">HW_OPEN_INFO</ref>,<sp/>llist);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pEntry-&gt;Flink;<sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>do<sp/>anything<sp/>unless<sp/>this<sp/>event<sp/>is<sp/>of<sp/>interest<sp/>to<sp/>the<sp/>MDD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>&amp;<sp/>fdwEventMask<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>event<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwOrigEvent<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2e18d8541fe7370bbd64d2d11155f4c7" kindref="member">fEventData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwTmpEvent<sp/>=<sp/>dwOrigEvent;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwOrigEvent<sp/>=<sp/>InterlockedExchange(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2e18d8541fe7370bbd64d2d11155f4c7" kindref="member">fEventData</ref>),<sp/></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwTmpEvent<sp/>|<sp/>fdwEventMask)<sp/>;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>dwTmpEvent<sp/>!=<sp/>dwOrigEvent<sp/>);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>the<sp/>MDD<sp/>that<sp/>new<sp/>event<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRetCode<sp/>=<sp/>SetEvent(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>CommEvent<sp/>-<sp/>Event<sp/>0x%X,<sp/>Handle<sp/>0x%X<sp/>Mask<sp/>0x%X<sp/>(%X)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwTmpEvent<sp/>|<sp/>fdwEventMask,</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead,</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRetCode));</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/>|<sp/>COM_IOControl<sp/>|<sp/>Device<sp/>IO<sp/>control<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>io<sp/>control<sp/>code<sp/>to<sp/>be<sp/>performed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>input<sp/>data<sp/>to<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>number<sp/>of<sp/>bytes<sp/>being<sp/>passed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>output<sp/>data<sp/>from<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|maximum<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>receive<sp/>from<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>actual<sp/>number<sp/>of<sp/>bytes<sp/>received<sp/>from<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/><sp/><sp/><sp/><sp/>Routine<sp/>exported<sp/>by<sp/>a<sp/>device<sp/>driver.<sp/><sp/>&quot;COM&quot;<sp/>is<sp/>the<sp/>string<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passed<sp/>in<sp/>as<sp/>lpszType<sp/>in<sp/>RegisterDevice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1979" refid="mdd_8c_1a26b95e7433cb445c991d30c02dde6a1f" refkind="member"><highlight class="normal"><ref refid="mdd_8c_1a26b95e7433cb445c991d30c02dde6a1f" kindref="member">COM_IOControl</ref>(<ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/>pOpenHead,</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwCode,<sp/>PBYTE<sp/>pBufIn,</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwLenIn,<sp/>PBYTE<sp/>pBufOut,<sp/>DWORD<sp/>dwLenOut,</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDWORD<sp/>pdwActualOut)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TRUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>to<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o" kindref="compound">PHW_INDEP_INFO</ref><sp/><sp/>pHWIHead;<sp/></highlight><highlight class="comment">//=<sp/>pOpenHead-&gt;pSerialHead;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>PLIST_ENTRY<sp/><sp/><sp/><sp/><sp/>pEntry;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>PVOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>PHW_VTBL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>UCHAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stopbits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwFlags;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOpenHead==NULL)<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>pHWIHead<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1ab1c73eff896a882a70fda78ef005213a" kindref="member">pSerialHead</ref>;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWObj<sp/><sp/><sp/>=<sp/>(<ref refid="mdd_8h_1a2b4cc80621072e9dda16116cca029671" kindref="member">PHWOBJ</ref>)pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abd9dcf9a3a0d30b1f4252b28737903c7" kindref="member">pHWObj</ref>;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl<sp/>=<sp/>pHWObj-&gt;pFuncTbl;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWHead<sp/><sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>DEVACCESS_BUSNAMESPACE)!=0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Special<sp/>IOCTL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dwCode)<sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_POWER_CAPABILITIES:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_POWER_SET:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_POWER_GET:</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_POWER_QUERY:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_REGISTER_POWER_RELATIONSHIP:</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Power<sp/>is<sp/>Handle<sp/>by<sp/>PDD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>IOCTL<sp/>through<sp/>to<sp/>PDD<sp/>if<sp/>hook<sp/>is<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pFuncTbl-&gt;HWIoctl<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pFuncTbl-&gt;HWIoctl(pHWHead,dwCode,pBufIn,dwLenIn,pBufOut,dwLenOut,<sp/>pdwActualOut)<sp/>==<sp/>FALSE))<sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>ioctl<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/>dwCode));</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RetVal;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_FUNCTION,</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;+COM_IOControl(0x%X,<sp/>%d,<sp/>0x%X,<sp/>%d,<sp/>0x%X,<sp/>%d,<sp/>0x%X)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead,<sp/>dwCode,<sp/>pBufIn,<sp/>dwLenIn,<sp/>pBufOut,</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwLenOut,<sp/>pdwActualOut));</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1abde36d66a2fa1088bac253d9216390a2" kindref="member">OpenCnt</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_ERROR,</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>COM_IOControl<sp/>-<sp/>device<sp/>was<sp/>closed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_HANDLE);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwCode<sp/>==<sp/>IOCTL_PSL_NOTIFY<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDEVICE_PSL_NOTIFY<sp/>pPslPacket<sp/>=<sp/>(PDEVICE_PSL_NOTIFY)pBufIn;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pPslPacket-&gt;dwSize<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DEVICE_PSL_NOTIFY))<sp/>&amp;&amp;<sp/>(pPslPacket-&gt;dwFlags<sp/>==<sp/>DLL_PROCESS_EXITING)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Process<sp/>is<sp/>exiting.\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8c_1a74ffd644f82cdecda1fdab7d892d59ee" kindref="member">ProcessExiting</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TRUE);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>caller<sp/>has<sp/>access<sp/>permissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>:<sp/>Pay<sp/>attention<sp/>here.<sp/><sp/>I<sp/>hate<sp/>to<sp/>make<sp/>this<sp/>check<sp/>repeatedly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below,<sp/>so<sp/>I&apos;ll<sp/>optimize<sp/>it<sp/>here.<sp/><sp/>But<sp/>as<sp/>you<sp/>add<sp/>new<sp/>ioctl&apos;s<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sure<sp/>to<sp/>account<sp/>for<sp/>them<sp/>in<sp/>this<sp/>if<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_GET_WAIT_MASK)<sp/>||</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_SET_WAIT_MASK)<sp/>||</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_WAIT_ON_MASK)<sp/>||</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_GET_MODEMSTATUS)<sp/>||</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_GET_PROPERTIES)<sp/>||</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_SERIAL_GET_TIMEOUTS)<sp/>||</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_POWER_CAPABILITIES)<sp/>||</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_POWER_QUERY)<sp/>||</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dwCode<sp/>==<sp/>IOCTL_POWER_SET))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>one<sp/>of<sp/>the<sp/>above<sp/>operations,<sp/>then<sp/>read<sp/>or<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>access<sp/>permissions<sp/>are<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref><sp/>&amp;<sp/>(GENERIC_READ<sp/>|<sp/>GENERIC_WRITE<sp/>|<sp/><ref refid="_virtual_g_p_s_jet_2vgps_2driver_2config_8h_1a1f53ceced63c655fbb4f5d4852f3f2e4" kindref="member">VGD_AC_CONFIGURATOR</ref>)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_IOCTL|ZONE_ERROR,</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;COM_Ioctl:<sp/>Ioctl<sp/>%x<sp/>access<sp/>permission<sp/>failure<sp/>x%X\n\r&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwCode,<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1abc6136b48a9fcf3ae403b3d429a83dec" kindref="member">AccessCode</ref>));</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_ACCESS);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(FALSE);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1ab0796fe82ce9bc7a1146ec818219d226" kindref="member">COM_INC_USAGE_CNT</ref>(pOpenHead);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>dwCode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_BREAK_ON<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>break<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_BREAK_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/>Sets<sp/>the<sp/>transmission<sp/>line<sp/>in<sp/>a<sp/>break<sp/>state<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_BREAK_OFF&gt;<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_BREAK_ON<sp/>:</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_BREAK_ON\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetBreak(pHWHead);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_BREAK_OFF<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>clear<sp/>the<sp/>break<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_BREAK_OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@remark<sp/><sp/><sp/><sp/><sp/>Restores<sp/>character<sp/>transmission<sp/>for<sp/>the<sp/>communications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device<sp/>and<sp/>places<sp/>the<sp/>transmission<sp/>line<sp/>in<sp/>a<sp/>nonbreak<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(called<sp/>after<sp/>&lt;f<sp/>IOCTL_SERIAL_SET_BREAK_ON&gt;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_BREAK_OFF<sp/>:</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_BREAK_OFF\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearBreak(pHWHead);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_DTR<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>DTR<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_DTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_CLR_DTR&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_DTR<sp/>:</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>an<sp/>error<sp/>to<sp/>call<sp/>this<sp/>if<sp/>DCB<sp/>uses<sp/>DTR_CONTROL_HANDSHAKE.</highlight></codeline>
<codeline lineno="2147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>!=<sp/>DTR_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetDTR(pHWHead);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_CLR_DTR<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>DTR<sp/>low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_CLR_DTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_DTR&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_CLR_DTR<sp/>:</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_CLR_DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>an<sp/>error<sp/>to<sp/>call<sp/>this<sp/>if<sp/>DCB<sp/>uses<sp/>DTR_CONTROL_HANDSHAKE.</highlight></codeline>
<codeline lineno="2177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>!=<sp/>DTR_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearDTR(pHWHead);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/>BOOL<sp/>|<sp/>IOCTL_SERIAL_SET_RTS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>RTS<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_RTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_CLR_RTS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_RTS<sp/>:</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>an<sp/>error<sp/>to<sp/>call<sp/>this<sp/>if<sp/>DCB<sp/>uses<sp/>RTS_CONTROL_HANDSHAKE.</highlight></codeline>
<codeline lineno="2207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>!=<sp/>RTS_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetRTS(pHWHead);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/>BOOL<sp/>|<sp/>IOCTL_SERIAL_CLR_RTS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>RTS<sp/>low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_CLR_RTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_RTS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_CLR_RTS<sp/>:</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_CLR_RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>an<sp/>error<sp/>to<sp/>call<sp/>this<sp/>if<sp/>DCB<sp/>uses<sp/>RTS_CONTROL_HANDSHAKE.</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>!=<sp/>RTS_CONTROL_HANDSHAKE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWClearRTS(pHWHead);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_XOFF<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>cause<sp/>transmission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>act<sp/>as<sp/>if<sp/>an<sp/>XOFF<sp/>character<sp/>has<sp/>been<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_XOFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_XON&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_XOFF<sp/>:</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_XOFF\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a44589f14378955069ba4f4138982a1d2" kindref="member">XFlow</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_XON<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>cause<sp/>transmission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>act<sp/>as<sp/>if<sp/>an<sp/>XON<sp/>character<sp/>has<sp/>been<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_XON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_XOFF&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_XON<sp/>:</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_XON\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a44589f14378955069ba4f4138982a1d2" kindref="member">XFlow</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>|<sp/>IOCTL_SERIAL_GET_WAIT_MASK<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>retrieve<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>event<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_WAIT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>place<sp/>event<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(DWORD)<sp/>or<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(DWORD)<sp/>if<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_WAIT_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_WAIT_ON_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_WAIT_MASK<sp/>:</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_WAIT_MASK\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>The<sp/>Wait<sp/>Mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(DWORD<sp/>*)pBufOut<sp/>=<sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_WAIT_MASK<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>event<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_WAIT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>the<sp/>DWORD<sp/>mask<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>should<sp/>be<sp/>sizeof(DWORD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_GET_WAIT_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_WAIT_ON_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_WAIT_MASK<sp/>:</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_WAIT_MASK<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(DWORD<sp/>*)pBufIn));</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnterCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>now<sp/>we<sp/>can<sp/>actually<sp/>set<sp/>the<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref><sp/>=<sp/>*(DWORD<sp/>*)pBufIn;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>If<sp/>there<sp/>is<sp/>an<sp/>outstanding<sp/>WaitCommEvent,<sp/>it<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>an<sp/>error<sp/>when<sp/>SET_WAIT_MASK<sp/>is<sp/>called.<sp/><sp/>We<sp/>accomplish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>by<sp/>generating<sp/>an<sp/>hCommEvent<sp/>which<sp/>will<sp/>wake<sp/>the<sp/>WaitComm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>subsequently<sp/>return<sp/>error<sp/>(since<sp/>no<sp/>event<sp/>bits<sp/>will<sp/>be<sp/>set<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1ab5c2cb6c2eea78cdb517329a34a4a390" kindref="member">fAbort</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1adbd14a158428fe9c0cdd66ed88a66fa7" kindref="member">hCommEvent</ref>);</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>calculate<sp/>the<sp/>OR<sp/>of<sp/>all<sp/>masks<sp/>for<sp/>this<sp/>port.<sp/><sp/>Use<sp/>a<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variable<sp/>so<sp/>that<sp/>the<sp/>other<sp/>threads<sp/>don&apos;t<sp/>see<sp/>a<sp/>partial<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref>.Flink;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pEntry<sp/>!=<sp/>&amp;pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a823d6525400b87fa570e9e71ae307424" kindref="member">OpenList</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">PHW_OPEN_INFO</ref><sp/><sp/><sp/>pTmpOpenHead;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTmpOpenHead<sp/>=<sp/>CONTAINING_RECORD(<sp/>pEntry,<sp/><ref refid="struct_____h_w___o_p_e_n___i_n_f_o" kindref="compound">HW_OPEN_INFO</ref>,<sp/>llist);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntry<sp/>=<sp/>pEntry-&gt;Flink;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>SetWaitMask<sp/>-<sp/>handle<sp/>x%X<sp/>mask<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTmpOpenHead,<sp/>pTmpOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>));</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwFlags<sp/>|=<sp/>pTmpOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a1f707f4702fc89cf2b46876e4c44f0bc" kindref="member">fEventMask</ref><sp/>=<sp/>dwFlags;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LeaveCriticalSection(&amp;(pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a3856cc32be55f0c6853dc62de6c55002" kindref="member">EventCS</ref>));</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_EVENTS,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>SetWaitMask<sp/>-<sp/>mask<sp/>x%X,<sp/>global<sp/>mask<sp/>x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOpenHead-&gt;<ref refid="struct_____h_w___o_p_e_n___i_n_f_o_1a62222affff97bee7e78a30e7b1ae101e" kindref="member">CommEvents</ref>.<ref refid="struct_____c_o_m_m___e_v_e_n_t_s_1a2ce5c949fb81f8514631eac7b78a25d5" kindref="member">fEventMask</ref>,<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a1f707f4702fc89cf2b46876e4c44f0bc" kindref="member">fEventMask</ref>));</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_WAIT_ON_MASK<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>wait<sp/>for<sp/>a<sp/>communications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>that<sp/>matches<sp/>one<sp/>in<sp/>the<sp/>event<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_WAIT_ON_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>place<sp/>event<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>returned<sp/>mask<sp/>will<sp/>show<sp/>the<sp/>event<sp/>that<sp/>terminated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>wait.<sp/><sp/>If<sp/>a<sp/>process<sp/>attempts<sp/>to<sp/>change<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle&apos;s<sp/>event<sp/>mask<sp/>by<sp/>using<sp/>the<sp/>IOCTL_SERIAL_SET_WAIT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>the<sp/>driver<sp/>should<sp/>return<sp/>immediately<sp/>with<sp/>(DWORD)0<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>returned<sp/>event<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(DWORD)<sp/>or<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(DWORD)<sp/>if<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_GET_WAIT_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_SET_WAIT_MASK&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_WAIT_ON_MASK<sp/>:</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_WAIT_ON_MASK\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="mdd_8c_1aee4ef1416739c614723a09a93ca3cbd1" kindref="member">WaitCommEvent</ref>(pOpenHead,<sp/>(DWORD<sp/>*)pBufOut,<sp/>NULL)<sp/>==<sp/>FALSE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Device<sp/>may<sp/>have<sp/>been<sp/>closed<sp/>or<sp/>removed<sp/>while<sp/>we<sp/>were<sp/>waiting<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_ERROR,</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>COM_IOControl<sp/>-<sp/>Error<sp/>in<sp/>WaitCommEvent\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_GET_COMMSTATUS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>clear<sp/>any<sp/>pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>communications<sp/>errors<sp/>and<sp/>return<sp/>the<sp/>current<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_COMMSTATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Points<sp/>to<sp/>a<sp/>&lt;f<sp/>SERIAL_DEV_STATUS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>for<sp/>the<sp/>returned<sp/>status<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(SERIAL_DEV_STATUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(SERIAL_DEV_STATUS)<sp/>if<sp/>no<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_COMMSTATUS<sp/>:</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PSERIAL_DEV_STATUS<sp/>pSerialDevStat;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_COMMSTATUS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SERIAL_DEV_STATUS))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat<sp/>=<sp/>(PSERIAL_DEV_STATUS)pBufOut;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>The<sp/>Error<sp/>Mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat-&gt;Errors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>ComStat<sp/>structure<sp/>&amp;<sp/>get<sp/>PDD<sp/>related<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(pSerialDevStat-&gt;ComStat),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMSTAT));</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PSERIAL_DEV_STATUS)pBufOut)-&gt;Errors<sp/>=</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWGetStatus(pHWHead,<sp/>&amp;(pSerialDevStat-&gt;ComStat));</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PDD<sp/>set<sp/>fCtsHold,<sp/>fDsrHold,<sp/>fRLSDHold,<sp/>and<sp/>fTXim.<sp/><sp/>The<sp/>MDD<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>set<sp/>fXoffHold,<sp/>fXoffSent,<sp/>cbInQue,<sp/>and<sp/>cbOutQue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat-&gt;ComStat.cbInQue<sp/>=<sp/><ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pHWIHead);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat-&gt;ComStat.cbOutQue<sp/>=<sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a534610a756b17b98dcdd7fc935a458c5" kindref="member">TxBytesPending</ref>;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat-&gt;ComStat.fXoffHold<sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref>;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSerialDevStat-&gt;ComStat.fXoffSent<sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref>;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SERIAL_DEV_STATUS);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_GET_MODEMSTATUS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>retrieve<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modem<sp/>control-register<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_MODEMSTATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Points<sp/>to<sp/>a<sp/>DWORD<sp/>for<sp/>the<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modem<sp/>status<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(DWORD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(DWORD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>no<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_MODEMSTATUS<sp/>:</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_MODEMSTATUS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Modem<sp/>Status<sp/>dword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(DWORD<sp/>*)pBufOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWGetModemStatus(pHWHead,<sp/>(PULONG)pBufOut);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_GET_PROPERTIES<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>retrieve<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>about<sp/>the<sp/>communications<sp/>properties<sp/>for<sp/>the<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_PROPERTIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Points<sp/>to<sp/>a<sp/>&lt;f<sp/>COMMPROP&gt;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>returned<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(COMMPROP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(COMMPROP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>no<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_PROPERTIES<sp/>:</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_PROPERTIES\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMPROP))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>ComMProp<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>((COMMPROP<sp/>*)pBufOut),<sp/>0,</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMPROP));</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWGetCommProperties(pHWHead,<sp/>(LPCOMMPROP)pBufOut);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMPROP);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_TIMEOUTS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>time-out<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>all<sp/>read<sp/>and<sp/>write<sp/>operations<sp/>on<sp/>a<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_TIMEOUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>the<sp/>&lt;f<sp/>COMMTIMEOUTS&gt;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>should<sp/>be<sp/>sizeof(COMMTIMEOUTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_GET_TIMEOUTS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_TIMEOUTS<sp/>:</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMTIMEOUTS))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_COMMTIMEOUTS<sp/>(%d,%d,%d,%d,%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadIntervalTimeout,</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadTotalTimeoutMultiplier,</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadTotalTimeoutConstant,</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;WriteTotalTimeoutMultiplier,</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;WriteTotalTimeoutConstant));</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadIntervalTimeout<sp/>=</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadIntervalTimeout;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutMultiplier<sp/>=</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadTotalTimeoutMultiplier;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.ReadTotalTimeoutConstant<sp/>=</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;ReadTotalTimeoutConstant;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutMultiplier<sp/>=</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;WriteTotalTimeoutMultiplier;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>.WriteTotalTimeoutConstant<sp/>=</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((COMMTIMEOUTS<sp/>*)pBufIn)-&gt;WriteTotalTimeoutConstant;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetCommTimeouts(pHWHead,<sp/>(COMMTIMEOUTS<sp/>*)pBufIn);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_GET_TIMEOUTS<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>get<sp/>the<sp/>time-out<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>all<sp/>read<sp/>and<sp/>write<sp/>operations<sp/>on<sp/>a<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_TIMEOUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>&lt;f<sp/>COMMTIMEOUTS&gt;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>returned<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>should<sp/>be<sp/>sizeof(COMMTIMEOUTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Points<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(COMMTIMEOUTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>no<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@xref<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;f<sp/>IOCTL_SERIAL_GET_TIMEOUTS&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_TIMEOUTS<sp/>:</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_TIMEOUTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMTIMEOUTS))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>((COMMTIMEOUTS<sp/>*)pBufOut),<sp/>0,</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMTIMEOUTS));</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((LPCOMMTIMEOUTS)pBufOut,<sp/>&amp;(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a61165382e3faef95e29313e2bfbdcc05" kindref="member">CommTimeouts</ref>),</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMTIMEOUTS));</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(COMMTIMEOUTS);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_PURGE<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>discard<sp/>characters<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>or<sp/>input<sp/>buffer<sp/>of<sp/>a<sp/>specified<sp/>communications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resource.<sp/><sp/>It<sp/>can<sp/>also<sp/>terminate<sp/>pending<sp/>read<sp/>or<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operations<sp/>on<sp/>the<sp/>resource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_PURGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>DWORD<sp/>containing<sp/>the<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Should<sp/>be<sp/>sizeof(DWORD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_PURGE<sp/>:</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DWORD))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwFlags<sp/>=<sp/>*((PDWORD)<sp/>pBufIn);</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_PURGE<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),dwFlags));</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWPurgeComm(pHWHead,dwFlags);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwFlags<sp/>&amp;<sp/>PURGE_RXCLEAR<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a457ee310a66bcb363737d6565fa5ef65" kindref="member">RxEnterCS</ref>(pHWIHead);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG(ZONE_IOCTL|ZONE_USR_READ,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Flushing<sp/>%d<sp/>bytes<sp/>from<sp/>the<sp/>read<sp/>buffer\r\n&quot;</highlight><highlight class="normal">),<ref refid="mdd_8h_1a6eabda22e169f82e780d432ed820b2ae" kindref="member">RxBytesAvail</ref>(pHWIHead)));</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af7a4350c0e81d097267984ca8bcc6216" kindref="member">Read</ref><sp/>=<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a1389a7f5f4f372993bde25c38954fdd7" kindref="member">Write</ref>;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1af2f619f01a5faea7fb7f37bfc05cc49a" kindref="member">RxCharBuffer</ref>,<sp/>0,<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a9611b01ac91dd8080cdb0d4a31d425b2" kindref="member">RxBufferInfo</ref>.<ref refid="struct_____r_x___b_u_f_f_e_r___i_n_f_o_1a054f4f56ebe3a548d88477ccc6e07eaa" kindref="member">Length</ref>);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a6a416437a9d8b47c45f602d67758e65c" kindref="member">RxLeaveCS</ref>(pHWIHead);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>any<sp/>flow<sp/>control<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fInX<sp/>&amp;&amp;<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_FLOW,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;Sending<sp/>XON\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1ad9b8fcf83c7ced0af73fcade2730ae2c" kindref="member">SentXoff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fTXContinueOnXoff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acccbba674dadf1988f0e7b70c3968077" kindref="member">StopXmit</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWXmitComChar(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>,pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.XonChar);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fRtsControl<sp/>==<sp/>RTS_CONTROL_HANDSHAKE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_USR_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;RTS_CONTROL_HANDSHAKE<sp/>Setting<sp/>RTS\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a0ae444123b328c7f7fa92c5b380ffb80" kindref="member">RtsFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetRTS(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af2f342aba6f1f0cd7e79fd7d6599773a" kindref="member">pHWHead</ref>);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.fDtrControl<sp/>==<sp/>DTR_CONTROL_HANDSHAKE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_USR_READ|ZONE_FLOW,</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;DTR_CONTROL_HANDSHAKE<sp/>Setting<sp/>DTR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a36837e1ec96825e5fed451ccacad3b27" kindref="member">DtrFlow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWSetDTR(pHWHead);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>free<sp/>up<sp/>any<sp/>threads<sp/>blocked<sp/>in<sp/>MDD.<sp/>Reads<sp/>and<sp/>writes<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loops,<sp/>so<sp/>they<sp/>also<sp/>need<sp/>a<sp/>flag<sp/>to<sp/>tell<sp/>them<sp/>to<sp/>abort.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwFlags<sp/>&amp;<sp/>PURGE_RXABORT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a73b2be619245fc55cf3e2ad11173221b" kindref="member">fAbortRead</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PulseEvent(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1af482df826b7892317cf5f834eb904c5b" kindref="member">hReadEvent</ref>);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dwFlags<sp/>&amp;<sp/>PURGE_TXABORT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a74ad96968f1600840a067f13c553b96a" kindref="member">fAbortTransmit</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>COM_Write()<sp/>clears<sp/>event<sp/>upon<sp/>entry,<sp/>so<sp/>we<sp/>can<sp/>use<sp/>SetEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEvent(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1a57d93b92288f5de22b19d3273b61ea4b" kindref="member">hTransmitEvent</ref>);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_QUEUE_SIZE<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>queue<sp/>sizes<sp/>of<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_QUEUE_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>&lt;f<sp/>SERIAL_QUEUE_SIZES&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>should<sp/>be<sp/>sizeof(&lt;f<sp/>SERIAL_QUEUE_SIZES&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_QUEUE_SIZE<sp/>:</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SERIAL_QUEUE_SIZES))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_QUEUE_SIZE<sp/>(%d,%d,%d,%d,%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SERIAL_QUEUE_SIZES<sp/>*)pBufIn)-&gt;cbInQueue,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SERIAL_QUEUE_SIZES<sp/>*)pBufIn)-&gt;cbOutQueue));</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Normally<sp/>we<sp/>would<sp/>do<sp/>something<sp/>with<sp/>the<sp/>passed<sp/>in<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>don&apos;t<sp/>think<sp/>the<sp/>user<sp/>has<sp/>a<sp/>better<sp/>idea<sp/>of<sp/>queue<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compared<sp/>to<sp/>our<sp/>infinite<sp/>knowledge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_IMMEDIATE_CHAR<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>transmit<sp/>a<sp/>specified<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ahead<sp/>of<sp/>any<sp/>pending<sp/>data<sp/>in<sp/>the<sp/>output<sp/>buffer<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_IMMEDIATE_CHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>UCHAR<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>should<sp/>be<sp/>sizeof(UCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_IMMEDIATE_CHAR<sp/>:</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(UCHAR))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_IMMEDIATE_CHAR<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(UCHAR<sp/>*)pBufIn));</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWXmitComChar(pHWHead,<sp/>*pBufIn);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_GET_DCB<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>get<sp/>the<sp/>device-control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>from<sp/>a<sp/>specified<sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_GET_DCB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>&lt;f<sp/>DCB&gt;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Should<sp/>be<sp/>sizeof(&lt;f<sp/>DCB&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Pointer<sp/>to<sp/>DWORD<sp/>to<sp/>return<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>returned<sp/>data<sp/>(should<sp/>be<sp/>set<sp/>to<sp/>sizeof(&lt;f<sp/>DCB&gt;)<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_GET_DCB<sp/>:</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_GET_DCB\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenOut<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufOut)<sp/>||</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pBufOut,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;(pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB));</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdwActualOut<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_SET_DCB<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>device-control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>on<sp/>a<sp/>specified<sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_SET_DCB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Pointer<sp/>to<sp/>a<sp/>&lt;f<sp/>DCB&gt;<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>should<sp/>be<sp/>sizeof(&lt;f<sp/>DCB&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_SET_DCB<sp/>:</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(dwLenIn<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DCB))<sp/>||<sp/>(NULL<sp/>==<sp/>pBufIn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>parameter\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>IOCTL_SERIAL_SET_DCB\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="mdd_8c_1a98720d759225609d42866faa373dce34" kindref="member">ApplyDCB</ref><sp/>(pHWIHead,<sp/>(DCB<sp/>*)pBufIn,<sp/>TRUE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>likely<sp/>an<sp/>unsupported<sp/>baud<sp/>rate<sp/>was<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>ApplyDCB<sp/>failed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_ENABLE_IR<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>device-control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>on<sp/>a<sp/>specified<sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_ENABLE_IR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_ENABLE_IR<sp/>:</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IR,<sp/></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL<sp/>Enable<sp/>IR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pFuncTbl-&gt;HWEnableIR(pHWHead,<sp/>pHWIHead-&gt;<ref refid="struct_____h_w___i_n_d_e_p___i_n_f_o_1acc505fe61c532cb6d8c468d3725ff3ac" kindref="member">DCB</ref>.BaudRate)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_ERROR|ZONE_IR,<sp/></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IR<sp/>mode<sp/>failed\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>****************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@func<sp/>BOOL<sp/><sp/>|<sp/>IOCTL_SERIAL_DISABLE_IR<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>IO<sp/>control<sp/>routine<sp/>to<sp/>set<sp/>the<sp/>device-control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>on<sp/>a<sp/>specified<sp/>communications<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwOpenData<sp/>|<sp/>value<sp/>returned<sp/>from<sp/>COM_Open<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwCode<sp/>|<sp/>IOCTL_SERIAL_DISABLE_IR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenIn<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PBYTE<sp/>|<sp/>pBufOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>DWORD<sp/>|<sp/>dwLenOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@parm<sp/>PDWORD<sp/>|<sp/>pdwActualOut<sp/>|<sp/>Ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>@rdesc<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>TRUE<sp/>for<sp/>success,<sp/>FALSE<sp/>for<sp/>failure<sp/>(and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sets<sp/>thread<sp/>error<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IOCTL_SERIAL_DISABLE_IR<sp/>:</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IR,<sp/></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;IOCTL<sp/>Disable<sp/>IR\r\n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFuncTbl-&gt;HWDisableIR(pHWHead);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>IOCTL<sp/>through<sp/>to<sp/>PDD<sp/>if<sp/>hook<sp/>is<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(pFuncTbl-&gt;HWIoctl<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pFuncTbl-&gt;HWIoctl(pHWHead,dwCode,pBufIn,dwLenIn,pBufOut,dwLenOut,</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdwActualOut)<sp/>==<sp/>FALSE)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_INVALID_PARAMETER);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RetVal<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL,<sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;<sp/>Invalid<sp/>ioctl<sp/>0x%X\r\n&quot;</highlight><highlight class="normal">),<sp/>dwCode));</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mdd_8h_1a5297f1634cd352c1d1405ae209389c7d" kindref="member">COM_DEC_USAGE_CNT</ref>(pOpenHead);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUGMSG<sp/>(ZONE_IOCTL|ZONE_FUNCTION|(RetVal<sp/>==<sp/>FALSE?ZONE_ERROR:0),</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TEXT(</highlight><highlight class="stringliteral">&quot;-COM_IOControl<sp/>%s<sp/>Ecode=%d<sp/>(len=%d)\r\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RetVal<sp/>==<sp/>TRUE)<sp/>?<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">)<sp/>:<sp/>TEXT(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetLastError(),<sp/>(NULL<sp/>==<sp/>pdwActualOut)<sp/>?<sp/>0<sp/>:<sp/>*pdwActualOut));</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(RetVal);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/karst/Google Drive/ProjectNet/Projekter/NMEA connector/Inspiration/VirtualGPSJet/vgps/driver/mdd.c"/>
  </compounddef>
</doxygen>
